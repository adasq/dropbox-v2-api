{
	"account/set_profile_photo": {
		"uri": "https://api.dropboxapi.com/2/account/set_profile_photo",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Sets a user's profile photo.",
		"parameters": {
			"list": [
				{
					"name": "photo",
					"type": "PhotoSourceArg",
					"desc": "Image to set as the user's new profile photo.",
					"parameters": [
						{
							"list": [
								{
									"name": "base64_data",
									"type": "String",
									"desc": "Image data in base64-encoded bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "base64_data",
					"type": "String",
					"desc": "Image data in base64-encoded bytes."
				}
			],
			"example": {
				"photo": {
					".tag": "base64_data",
					"base64_data": "SW1hZ2UgZGF0YSBpbiBiYXNlNjQtZW5jb2RlZCBieXRlcy4gTm90IGEgdmFsaWQgZXhhbXBsZS4="
				}
			}
		},
		"returnParameters": {
			"profile_photo_url": "https://dl-web.dropbox.com/account_photo/get/dbaphid%3AAAHWGmIXV3sUuOmBfTz0wPsiqHUpBWvv3ZA?vers=1556069330102&size=128x128"
		}
	},
	"auth/token/from_oauth1": {
		"uri": "https://api.dropboxapi.com/2/auth/token/from_oauth1",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Creates an OAuth 2.0 access token from the supplied OAuth 1.0 access token.",
		"parameters": {
			"list": [
				{
					"name": "oauth1_token",
					"type": "String(min_length=1)",
					"desc": "The supplied OAuth 1.0 access token."
				},
				{
					"name": "oauth1_token_secret",
					"type": "String(min_length=1)",
					"desc": "The token secret associated with the supplied access token."
				}
			],
			"example": {
				"oauth1_token": "qievr8hamyg6ndck",
				"oauth1_token_secret": "qomoftv0472git7"
			}
		},
		"returnParameters": {
			"oauth2_token": "9mCrkS7BIdAAAAAAAAAAHHS0TsSnpYvKQVtKdBnN5IuzhYOGblSgTcHgBFKFMmFn"
		}
	},
	"auth/token/revoke": {
		"uri": "https://api.dropboxapi.com/2/auth/token/revoke",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Disables the access token used to authenticate the call. If there is a corresponding refresh token for the access token, this disables that refresh token, as well as any other access tokens for that refresh token.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": null
	},
	"check/app": {
		"uri": "https://api.dropboxapi.com/2/check/app",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "This endpoint performs App Authentication, validating the supplied app key and secret, and returns the supplied string, to allow you to test your code and connection to the Dropbox API. It has no other effect. If you receive an HTTP 200 response with the supplied query, it indicates at least part of the Dropbox API infrastructure is working and that the app key and secret valid.",
		"parameters": {
			"list": [
				{
					"name": "query",
					"type": "String",
					"desc": "The string that you'd like to be echoed back to you. The default for this field is \"\"."
				}
			],
			"example": {
				"query": "foo"
			}
		},
		"returnParameters": {
			"result": "foo"
		}
	},
	"check/user": {
		"uri": "https://api.dropboxapi.com/2/check/user",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "This endpoint performs User Authentication, validating the supplied access token, and returns the supplied string, to allow you to test your code and connection to the Dropbox API. It has no other effect. If you receive an HTTP 200 response with the supplied query, it indicates at least part of the Dropbox API infrastructure is working and that the access token is valid.",
		"parameters": {
			"list": [
				{
					"name": "query",
					"type": "String",
					"desc": "The string that you'd like to be echoed back to you. The default for this field is \"\"."
				}
			],
			"example": {
				"query": "foo"
			}
		},
		"returnParameters": {
			"result": "foo"
		}
	},
	"contacts/delete_manual_contacts": {
		"uri": "https://api.dropboxapi.com/2/contacts/delete_manual_contacts",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Removes all manually added contacts. You'll still keep contacts who are on your team or who you imported. New contacts will be added when you share.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": null
	},
	"contacts/delete_manual_contacts_batch": {
		"uri": "https://api.dropboxapi.com/2/contacts/delete_manual_contacts_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Removes manually added contacts from the given list.",
		"parameters": {
			"list": [
				{
					"name": "email_addresses",
					"type": "List of (String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\"))",
					"desc": "List of manually added contacts to be deleted."
				}
			],
			"example": {
				"email_addresses": [
					"contactemailaddress1@domain.com",
					"contactemailaddress2@domain.com"
				]
			}
		},
		"returnParameters": null
	},
	"file_properties/properties/add": {
		"uri": "https://api.dropboxapi.com/2/file_properties/properties/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Add property groups to a Dropbox file. See [templates/add_for_user](#file_propertiestemplatesadd_for_user-see-docs) or [templates/add_for_team](#file_propertiestemplatesadd_for_team-see-docs) to create new templates.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)",
					"desc": "The property groups which are to be added to a Dropbox file. No two groups in the input should  refer to the same template.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": null
	},
	"file_properties/properties/overwrite": {
		"uri": "https://api.dropboxapi.com/2/file_properties/properties/overwrite",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Overwrite property groups associated with a file. This endpoint should be used instead of [properties/update](#file_propertiespropertiesupdate-see-docs) when property groups are being updated via a \"snapshot\" instead of via a \"delta\". In other words, this endpoint will delete all omitted fields from a property group, whereas [properties/update](#file_propertiespropertiesupdate-see-docs) will only delete fields that are explicitly marked for deletion.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup, min_items=1)",
					"desc": "The property groups \"snapshot\" updates to force apply. No two groups in the input should  refer to the same template.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": null
	},
	"file_properties/properties/remove": {
		"uri": "https://api.dropboxapi.com/2/file_properties/properties/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Permanently removes the specified property group from the file. To remove specific property field key value pairs, see [properties/update](#file_propertiespropertiesupdate-see-docs). To update a template, see [templates/update_for_user](#file_propertiestemplatesupdate_for_user-see-docs) or [templates/update_for_team](#file_propertiestemplatesupdate_for_team-see-docs). To remove a template, see [templates/remove_for_user](#file_propertiestemplatesremove_for_user-see-docs) or [templates/remove_for_team](#file_propertiestemplatesremove_for_team-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "property_template_ids",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))",
					"desc": "A list of identifiers for a template created by   or  ."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_template_ids": [
					"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
				]
			}
		},
		"returnParameters": null
	},
	"file_properties/properties/search": {
		"uri": "https://api.dropboxapi.com/2/file_properties/properties/search",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Search across property templates for particular property field values.",
		"parameters": {
			"list": [
				{
					"name": "queries",
					"type": "List of (PropertiesSearchQuery, min_items=1)",
					"desc": "Queries to search.",
					"parameters": [
						{
							"list": [
								{
									"name": "query",
									"type": "String",
									"desc": "The property field value for which to search across templates."
								},
								{
									"name": "mode",
									"type": "PropertiesSearchMode",
									"desc": "The mode with which to perform the search.",
									"parameters": [
										{
											"list": [
												{
													"name": "field_name",
													"type": "String",
													"desc": "Search for a value associated with this field name."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "field_name",
									"type": "String",
									"desc": "Search for a value associated with this field name."
								},
								{
									"name": "logical_operator",
									"type": "LogicalOperator",
									"desc": "The logical operator with which to append the query. The default for this union is or_operator.",
									"parameters": [
										{
											"list": [
												{
													"name": "or_operator",
													"type": "Void",
													"desc": "Append a query with an \"or\" operator."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "or_operator",
									"type": "Void",
									"desc": "Append a query with an \"or\" operator."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "field_name",
									"type": "String",
									"desc": "Search for a value associated with this field name."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "or_operator",
									"type": "Void",
									"desc": "Append a query with an \"or\" operator."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "query",
					"type": "String",
					"desc": "The property field value for which to search across templates."
				},
				{
					"name": "mode",
					"type": "PropertiesSearchMode",
					"desc": "The mode with which to perform the search.",
					"parameters": [
						{
							"list": [
								{
									"name": "field_name",
									"type": "String",
									"desc": "Search for a value associated with this field name."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "field_name",
					"type": "String",
					"desc": "Search for a value associated with this field name."
				},
				{
					"name": "logical_operator",
					"type": "LogicalOperator",
					"desc": "The logical operator with which to append the query. The default for this union is or_operator.",
					"parameters": [
						{
							"list": [
								{
									"name": "or_operator",
									"type": "Void",
									"desc": "Append a query with an \"or\" operator."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "or_operator",
					"type": "Void",
					"desc": "Append a query with an \"or\" operator."
				},
				{
					"name": "template_filter",
					"type": "TemplateFilter",
					"desc": "Filter results to contain only properties associated with these template IDs. The default for this union is filter_none.",
					"parameters": [
						{
							"list": [
								{
									"name": "filter_some",
									"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
									"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
								},
								{
									"name": "filter_none",
									"type": "Void",
									"desc": "No templates will be filtered from the result (all templates will be returned)."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "filter_some",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
					"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
				},
				{
					"name": "filter_none",
					"type": "Void",
					"desc": "No templates will be filtered from the result (all templates will be returned)."
				}
			],
			"example": {
				"queries": [
					{
						"query": "Confidential",
						"mode": {
							".tag": "field_name",
							"field_name": "Security"
						},
						"logical_operator": "or_operator"
					}
				],
				"template_filter": "filter_none"
			}
		},
		"returnParameters": {
			"matches": [
				{
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path": "/my_awesome/word.docx",
					"is_deleted": false,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			]
		}
	},
	"file_properties/properties/search/continue": {
		"uri": "https://api.dropboxapi.com/2/file_properties/properties/search/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [properties/search](#file_propertiespropertiessearch-see-docs), use this to paginate through all search results.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String(min_length=1)",
					"desc": "The cursor returned by your last call to   or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"matches": [
				{
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path": "/my_awesome/word.docx",
					"is_deleted": false,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			]
		}
	},
	"file_properties/properties/update": {
		"uri": "https://api.dropboxapi.com/2/file_properties/properties/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Add, update or remove properties associated with the supplied file and templates. This endpoint should be used instead of [properties/overwrite](#file_propertiespropertiesoverwrite-see-docs) when property groups are being updated via a \"delta\" instead of via a \"snapshot\" . In other words, this endpoint will not delete any omitted fields from a property group, whereas [properties/overwrite](#file_propertiespropertiesoverwrite-see-docs) will delete any fields that are omitted from a property group.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "update_property_groups",
					"type": "List of (PropertyGroupUpdate)",
					"desc": "The property groups \"delta\" updates to apply.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for a property template."
								},
								{
									"name": "add_or_update_fields",
									"type": "List of (PropertyField)?",
									"desc": "Property fields to update. If the property field already exists, it is updated. If the property field doesn't exist, the property group is added. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "remove_fields",
									"type": "List of (String)?",
									"desc": "Property fields to remove (by name), provided they exist. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for a property template."
				},
				{
					"name": "add_or_update_fields",
					"type": "List of (PropertyField)?",
					"desc": "Property fields to update. If the property field already exists, it is updated. If the property field doesn't exist, the property group is added. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "remove_fields",
					"type": "List of (String)?",
					"desc": "Property fields to remove (by name), provided they exist. This field is optional."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"update_property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"add_or_update_fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						],
						"remove_fields": []
					}
				]
			}
		},
		"returnParameters": null
	},
	"file_properties/templates/add_for_user": {
		"uri": "https://api.dropboxapi.com/2/file_properties/templates/add_for_user",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Add a template associated with a user. See [properties/add](#file_propertiespropertiesadd-see-docs) to add properties to a file. This endpoint can't be called on a team member or admin's behalf.",
		"parameters": {
			"list": [
				{
					"name": "name",
					"type": "String",
					"desc": "Display name for the template. Template names can be up to 256 bytes."
				},
				{
					"name": "description",
					"type": "String",
					"desc": "Description for the template. Template descriptions can be up to 1024 bytes."
				},
				{
					"name": "fields",
					"type": "List of (PropertyFieldTemplate)",
					"desc": "Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field being described. Property field keys can be up to 256 bytes."
								},
								{
									"name": "description",
									"type": "String",
									"desc": "Description of the property field. Property field descriptions can be up to 1024 bytes."
								},
								{
									"name": "type",
									"type": "PropertyType",
									"desc": "Data type of the value of this property field. This type will be enforced upon property creation and modifications.",
									"parameters": [
										{
											"list": [
												{
													"name": "string",
													"type": "Void",
													"desc": "The associated property field will be of type string. Unicode is supported."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "string",
									"type": "Void",
									"desc": "The associated property field will be of type string. Unicode is supported."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "string",
									"type": "Void",
									"desc": "The associated property field will be of type string. Unicode is supported."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field being described. Property field keys can be up to 256 bytes."
				},
				{
					"name": "description",
					"type": "String",
					"desc": "Description of the property field. Property field descriptions can be up to 1024 bytes."
				},
				{
					"name": "type",
					"type": "PropertyType",
					"desc": "Data type of the value of this property field. This type will be enforced upon property creation and modifications.",
					"parameters": [
						{
							"list": [
								{
									"name": "string",
									"type": "Void",
									"desc": "The associated property field will be of type string. Unicode is supported."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "string",
					"type": "Void",
					"desc": "The associated property field will be of type string. Unicode is supported."
				}
			],
			"example": {
				"name": "Security",
				"description": "These properties describe how confidential this file or folder is.",
				"fields": [
					{
						"name": "Security Policy",
						"description": "This is the security policy of the file or folder described.\nPolicies can be Confidential, Public or Internal.",
						"type": "string"
					}
				]
			}
		},
		"returnParameters": {
			"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
		}
	},
	"file_properties/templates/get_for_user": {
		"uri": "https://api.dropboxapi.com/2/file_properties/templates/get_for_user",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the schema for a specified template. This endpoint can't be called on a team member or admin's behalf.",
		"parameters": {
			"list": [
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "An identifier for template added by route  See   or  ."
				}
			],
			"example": {
				"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			}
		},
		"returnParameters": {
			"name": "Security",
			"description": "These properties describe how confidential this file or folder is.",
			"fields": [
				{
					"name": "Security Policy",
					"description": "This is the security policy of the file or folder described.\nPolicies can be Confidential, Public or Internal.",
					"type": {
						".tag": "string"
					}
				}
			]
		}
	},
	"file_properties/templates/list_for_user": {
		"uri": "https://api.dropboxapi.com/2/file_properties/templates/list_for_user",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the template identifiers for a team. To get the schema of each template use [templates/get_for_user](#file_propertiestemplatesget_for_user-see-docs). This endpoint can't be called on a team member or admin's behalf.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"template_ids": [
				"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			]
		}
	},
	"file_properties/templates/remove_for_user": {
		"uri": "https://api.dropboxapi.com/2/file_properties/templates/remove_for_user",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Permanently removes the specified template created from [templates/add_for_user](#file_propertiestemplatesadd_for_user-see-docs). All properties associated with the template will also be removed. This action cannot be undone.",
		"parameters": {
			"list": [
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "An identifier for a template created by   or  ."
				}
			],
			"example": {
				"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			}
		},
		"returnParameters": null
	},
	"file_properties/templates/update_for_user": {
		"uri": "https://api.dropboxapi.com/2/file_properties/templates/update_for_user",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Update a template associated with a user. This route can update the template name, the template description and add optional properties to templates. This endpoint can't be called on a team member or admin's behalf.",
		"parameters": {
			"list": [
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "An identifier for template added by  See   or  ."
				},
				{
					"name": "name",
					"type": "String?",
					"desc": "A display name for the template. template names can be up to 256 bytes. This field is optional."
				},
				{
					"name": "description",
					"type": "String?",
					"desc": "Description for the new template. Template descriptions can be up to 1024 bytes. This field is optional."
				},
				{
					"name": "add_fields",
					"type": "List of (PropertyFieldTemplate)?",
					"desc": "Property field templates to be added to the group template. There can be up to 32 properties in a single template. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field being described. Property field keys can be up to 256 bytes."
								},
								{
									"name": "description",
									"type": "String",
									"desc": "Description of the property field. Property field descriptions can be up to 1024 bytes."
								},
								{
									"name": "type",
									"type": "PropertyType",
									"desc": "Data type of the value of this property field. This type will be enforced upon property creation and modifications.",
									"parameters": [
										{
											"list": [
												{
													"name": "string",
													"type": "Void",
													"desc": "The associated property field will be of type string. Unicode is supported."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "string",
									"type": "Void",
									"desc": "The associated property field will be of type string. Unicode is supported."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "string",
									"type": "Void",
									"desc": "The associated property field will be of type string. Unicode is supported."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field being described. Property field keys can be up to 256 bytes."
				},
				{
					"name": "description",
					"type": "String",
					"desc": "Description of the property field. Property field descriptions can be up to 1024 bytes."
				},
				{
					"name": "type",
					"type": "PropertyType",
					"desc": "Data type of the value of this property field. This type will be enforced upon property creation and modifications.",
					"parameters": [
						{
							"list": [
								{
									"name": "string",
									"type": "Void",
									"desc": "The associated property field will be of type string. Unicode is supported."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "string",
					"type": "Void",
					"desc": "The associated property field will be of type string. Unicode is supported."
				}
			],
			"example": {
				"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
				"name": "New Security Template Name",
				"description": "These properties will describe how confidential this file or folder is.",
				"add_fields": [
					{
						"name": "Security Policy",
						"description": "This is the security policy of the file or folder described.\nPolicies can be Confidential, Public or Internal.",
						"type": "string"
					}
				]
			}
		},
		"returnParameters": {
			"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
		}
	},
	"file_requests/count": {
		"uri": "https://api.dropboxapi.com/2/file_requests/count",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the total number of file requests owned by this user. Includes both open and closed file requests.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"file_request_count": 15
		}
	},
	"file_requests/create": {
		"uri": "https://api.dropboxapi.com/2/file_requests/create",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Creates a file request for this user.",
		"parameters": {
			"list": [
				{
					"name": "title",
					"type": "String(min_length=1)",
					"desc": "The title of the file request. Must not be empty."
				},
				{
					"name": "destination",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")",
					"desc": "The path of the folder in the Dropbox where uploaded files will be sent. For apps with the app folder permission, this will be relative to the app folder."
				},
				{
					"name": "deadline",
					"type": "FileRequestDeadline?",
					"desc": "The deadline for the file request. Deadlines can only be set by Professional and Business accounts. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "deadline",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "The deadline for this file request."
								},
								{
									"name": "allow_late_uploads",
									"type": "GracePeriod?",
									"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "one_day",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "two_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "seven_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "thirty_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "always",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "deadline",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
					"desc": "The deadline for this file request."
				},
				{
					"name": "allow_late_uploads",
					"type": "GracePeriod?",
					"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "one_day",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "two_days",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "seven_days",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "thirty_days",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "always",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "open",
					"type": "Boolean",
					"desc": "Whether or not the file request should be open. If the file request is closed, it will not accept any file submissions, but it can be opened later. The default for this field is True."
				},
				{
					"name": "description",
					"type": "String?",
					"desc": "A description of the file request. This field is optional."
				}
			],
			"example": {
				"title": "Homework submission",
				"destination": "/File Requests/Homework",
				"deadline": {
					"deadline": "2020-10-12T17:00:00Z",
					"allow_late_uploads": "seven_days"
				},
				"open": true
			}
		},
		"returnParameters": {
			"id": "oaCAVmEyrqYnkZX9955Y",
			"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
			"title": "Homework submission",
			"created": "2015-10-05T17:00:00Z",
			"is_open": true,
			"file_count": 3,
			"destination": "/File Requests/Homework",
			"deadline": {
				"deadline": "2020-10-12T17:00:00Z",
				"allow_late_uploads": {
					".tag": "seven_days"
				}
			},
			"description": "Please submit your homework here."
		}
	},
	"file_requests/delete": {
		"uri": "https://api.dropboxapi.com/2/file_requests/delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete a batch of closed file requests.",
		"parameters": {
			"list": [
				{
					"name": "ids",
					"type": "List of (String(min_length=1, pattern=\"[-_0-9a-zA-Z]+\"))",
					"desc": "List IDs of the file requests to delete."
				}
			],
			"example": {
				"ids": [
					"oaCAVmEyrqYnkZX9955Y",
					"BaZmehYoXMPtaRmfTbSG"
				]
			}
		},
		"returnParameters": {
			"file_requests": [
				{
					"id": "oaCAVmEyrqYnkZX9955Y",
					"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
					"title": "Homework submission",
					"created": "2015-10-05T17:00:00Z",
					"is_open": true,
					"file_count": 3,
					"destination": "/File Requests/Homework",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z",
						"allow_late_uploads": {
							".tag": "seven_days"
						}
					},
					"description": "Please submit your homework here."
				},
				{
					"id": "BAJ7IrRGicQKGToykQdB",
					"url": "https://www.dropbox.com/request/BAJ7IrRGjcQKGToykQdB",
					"title": "Photo contest submission",
					"created": "2015-11-02T04:00:00Z",
					"is_open": true,
					"file_count": 105,
					"destination": "/Photo contest entries",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z"
					}
				},
				{
					"id": "rxwMPvK3ATTa0VxOJu5T",
					"url": "https://www.dropbox.com/request/rxwMPvK3ATTa0VxOJu5T",
					"title": "Wedding photo submission",
					"created": "2015-12-15T13:02:00Z",
					"is_open": true,
					"file_count": 37,
					"destination": "/Wedding photos"
				}
			]
		}
	},
	"file_requests/delete_all_closed": {
		"uri": "https://api.dropboxapi.com/2/file_requests/delete_all_closed",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete all closed file requests owned by this user.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"file_requests": [
				{
					"id": "oaCAVmEyrqYnkZX9955Y",
					"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
					"title": "Homework submission",
					"created": "2015-10-05T17:00:00Z",
					"is_open": true,
					"file_count": 3,
					"destination": "/File Requests/Homework",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z",
						"allow_late_uploads": {
							".tag": "seven_days"
						}
					},
					"description": "Please submit your homework here."
				},
				{
					"id": "BAJ7IrRGicQKGToykQdB",
					"url": "https://www.dropbox.com/request/BAJ7IrRGjcQKGToykQdB",
					"title": "Photo contest submission",
					"created": "2015-11-02T04:00:00Z",
					"is_open": true,
					"file_count": 105,
					"destination": "/Photo contest entries",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z"
					}
				},
				{
					"id": "rxwMPvK3ATTa0VxOJu5T",
					"url": "https://www.dropbox.com/request/rxwMPvK3ATTa0VxOJu5T",
					"title": "Wedding photo submission",
					"created": "2015-12-15T13:02:00Z",
					"is_open": true,
					"file_count": 37,
					"destination": "/Wedding photos"
				}
			]
		}
	},
	"file_requests/get": {
		"uri": "https://api.dropboxapi.com/2/file_requests/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the specified file request.",
		"parameters": {
			"list": [
				{
					"name": "id",
					"type": "String(min_length=1, pattern=\"[-_0-9a-zA-Z]+\")",
					"desc": "The ID of the file request to retrieve."
				}
			],
			"example": {
				"id": "oaCAVmEyrqYnkZX9955Y"
			}
		},
		"returnParameters": {
			"id": "oaCAVmEyrqYnkZX9955Y",
			"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
			"title": "Homework submission",
			"created": "2015-10-05T17:00:00Z",
			"is_open": true,
			"file_count": 3,
			"destination": "/File Requests/Homework",
			"deadline": {
				"deadline": "2020-10-12T17:00:00Z",
				"allow_late_uploads": {
					".tag": "seven_days"
				}
			},
			"description": "Please submit your homework here."
		}
	},
	"file_requests/list": {
		"uri": "https://api.dropboxapi.com/2/file_requests/list_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns a list of file requests owned by this user. For apps with the app folder permission, this will only return file requests with destinations in the app folder.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt64",
					"desc": "The maximum number of file requests that should be returned per request. The default for this field is 1000."
				}
			],
			"example": {
				"limit": 1000
			}
		},
		"returnParameters": {
			"file_requests": [
				{
					"id": "oaCAVmEyrqYnkZX9955Y",
					"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
					"title": "Homework submission",
					"created": "2015-10-05T17:00:00Z",
					"is_open": true,
					"file_count": 3,
					"destination": "/File Requests/Homework",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z",
						"allow_late_uploads": {
							".tag": "seven_days"
						}
					},
					"description": "Please submit your homework here."
				},
				{
					"id": "BAJ7IrRGicQKGToykQdB",
					"url": "https://www.dropbox.com/request/BAJ7IrRGjcQKGToykQdB",
					"title": "Photo contest submission",
					"created": "2015-11-02T04:00:00Z",
					"is_open": true,
					"file_count": 105,
					"destination": "/Photo contest entries",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z"
					}
				},
				{
					"id": "rxwMPvK3ATTa0VxOJu5T",
					"url": "https://www.dropbox.com/request/rxwMPvK3ATTa0VxOJu5T",
					"title": "Wedding photo submission",
					"created": "2015-12-15T13:02:00Z",
					"is_open": true,
					"file_count": 37,
					"destination": "/Wedding photos"
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": true
		}
	},
	"file_requests/list/continue": {
		"uri": "https://api.dropboxapi.com/2/file_requests/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list:2](#file_requestslist:2-see-docs), use this to paginate through all file requests. The cursor must come from a previous call to [list:2](#file_requestslist:2-see-docs) or [list/continue](#file_requestslistcontinue-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by the previous API call specified in the endpoint description."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"file_requests": [
				{
					"id": "oaCAVmEyrqYnkZX9955Y",
					"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
					"title": "Homework submission",
					"created": "2015-10-05T17:00:00Z",
					"is_open": true,
					"file_count": 3,
					"destination": "/File Requests/Homework",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z",
						"allow_late_uploads": {
							".tag": "seven_days"
						}
					},
					"description": "Please submit your homework here."
				},
				{
					"id": "BAJ7IrRGicQKGToykQdB",
					"url": "https://www.dropbox.com/request/BAJ7IrRGjcQKGToykQdB",
					"title": "Photo contest submission",
					"created": "2015-11-02T04:00:00Z",
					"is_open": true,
					"file_count": 105,
					"destination": "/Photo contest entries",
					"deadline": {
						"deadline": "2020-10-12T17:00:00Z"
					}
				},
				{
					"id": "rxwMPvK3ATTa0VxOJu5T",
					"url": "https://www.dropbox.com/request/rxwMPvK3ATTa0VxOJu5T",
					"title": "Wedding photo submission",
					"created": "2015-12-15T13:02:00Z",
					"is_open": true,
					"file_count": 37,
					"destination": "/Wedding photos"
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": true
		}
	},
	"file_requests/update": {
		"uri": "https://api.dropboxapi.com/2/file_requests/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Update a file request.",
		"parameters": {
			"list": [
				{
					"name": "id",
					"type": "String(min_length=1, pattern=\"[-_0-9a-zA-Z]+\")",
					"desc": "The ID of the file request to update."
				},
				{
					"name": "title",
					"type": "String(min_length=1)?",
					"desc": "The new title of the file request. Must not be empty. This field is optional."
				},
				{
					"name": "destination",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
					"desc": "The new path of the folder in the Dropbox where uploaded files will be sent. For apps with the app folder permission, this will be relative to the app folder. This field is optional."
				},
				{
					"name": "deadline",
					"type": "UpdateFileRequestDeadline",
					"desc": "The new deadline for the file request. Deadlines can only be set by Professional and Business accounts. The default for this union is no_update.",
					"parameters": [
						{
							"list": [
								{
									"name": "no_update",
									"type": "Void",
									"desc": "Do not change the file request's deadline."
								},
								{
									"name": "update",
									"type": "FileRequestDeadline?",
									"desc": "If None, the file request's deadline is cleared. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "deadline",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
													"desc": "The deadline for this file request."
												},
												{
													"name": "allow_late_uploads",
													"type": "GracePeriod?",
													"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
													"parameters": [
														{
															"list": [
																{
																	"name": "one_day",
																	"type": "Void",
																	"desc": ""
																},
																{
																	"name": "two_days",
																	"type": "Void",
																	"desc": ""
																},
																{
																	"name": "seven_days",
																	"type": "Void",
																	"desc": ""
																},
																{
																	"name": "thirty_days",
																	"type": "Void",
																	"desc": ""
																},
																{
																	"name": "always",
																	"type": "Void",
																	"desc": ""
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "one_day",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "two_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "seven_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "thirty_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "always",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "one_day",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "two_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "seven_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "thirty_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "always",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "deadline",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "The deadline for this file request."
								},
								{
									"name": "allow_late_uploads",
									"type": "GracePeriod?",
									"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "one_day",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "two_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "seven_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "thirty_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "always",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "deadline",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "The deadline for this file request."
								},
								{
									"name": "allow_late_uploads",
									"type": "GracePeriod?",
									"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "one_day",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "two_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "seven_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "thirty_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "always",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "no_update",
					"type": "Void",
					"desc": "Do not change the file request's deadline."
				},
				{
					"name": "update",
					"type": "FileRequestDeadline?",
					"desc": "If None, the file request's deadline is cleared. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "deadline",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "The deadline for this file request."
								},
								{
									"name": "allow_late_uploads",
									"type": "GracePeriod?",
									"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "one_day",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "two_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "seven_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "thirty_days",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "always",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "deadline",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
					"desc": "The deadline for this file request."
				},
				{
					"name": "allow_late_uploads",
					"type": "GracePeriod?",
					"desc": "If set, allow uploads after the deadline has passed. These     uploads will be marked overdue. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "one_day",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "two_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "seven_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "thirty_days",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "always",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "one_day",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "two_days",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "seven_days",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "thirty_days",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "always",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "open",
					"type": "Boolean?",
					"desc": "Whether to set this file request as open or closed. This field is optional."
				},
				{
					"name": "description",
					"type": "String?",
					"desc": "The description of the file request. This field is optional."
				}
			],
			"example": {
				"id": "oaCAVmEyrqYnkZX9955Y",
				"title": "Homework submission",
				"destination": "/File Requests/Homework",
				"deadline": {
					".tag": "update",
					"deadline": "2020-10-12T17:00:00Z",
					"allow_late_uploads": "seven_days"
				},
				"open": true
			}
		},
		"returnParameters": {
			"id": "oaCAVmEyrqYnkZX9955Y",
			"url": "https://www.dropbox.com/request/oaCAVmEyrqYnkZX9955Y",
			"title": "Homework submission",
			"created": "2015-10-05T17:00:00Z",
			"is_open": true,
			"file_count": 3,
			"destination": "/File Requests/Homework",
			"deadline": {
				"deadline": "2020-10-12T17:00:00Z",
				"allow_late_uploads": {
					".tag": "seven_days"
				}
			},
			"description": "Please submit your homework here."
		}
	},
	"files/copy": {
		"uri": "https://api.dropboxapi.com/2/files/copy_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Copy a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be copied.",
		"parameters": {
			"list": [
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "Field is deprecated. This flag has no effect. The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"from_path": "/Homework/math",
				"to_path": "/Homework/algebra",
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			}
		}
	},
	"files/copy_batch": {
		"uri": "https://api.dropboxapi.com/2/files/copy_batch_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Copy multiple files or folders to different locations at once in the user's Dropbox. This route will replace [copy_batch:1](#filescopy_batch:1-see-docs). The main difference is this route will return status for each entry, while [copy_batch:1](#filescopy_batch:1-see-docs) raises failure if any entry fails. This route will either finish synchronously, or return a job ID and do the async copy job in background. Please use [copy_batch/check:2](#filescopy_batchcheck:2-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (RelocationPath, min_items=1)",
					"desc": "List of entries to be moved or copied. Each entry is RelocationPath.",
					"parameters": [
						{
							"list": [
								{
									"name": "from_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to be copied or moved."
								},
								{
									"name": "to_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox that is the destination."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict. The default for this field is False."
				}
			],
			"example": {
				"entries": [
					{
						"from_path": "/Homework/math",
						"to_path": "/Homework/algebra"
					}
				],
				"autorename": false
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"success": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					}
				}
			]
		}
	},
	"files/copy_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/copy_batch/check_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [copy_batch:2](#filescopy_batch:2-see-docs). It returns list of results for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"success": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					}
				}
			]
		}
	},
	"files/copy_reference/get": {
		"uri": "https://api.dropboxapi.com/2/files/copy_reference/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get a copy reference to a file or folder. This reference string can be used to save that file or folder to another user's Dropbox by passing it to [copy_reference/save](#filescopy_referencesave-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file or folder you want to get a copy reference to."
				}
			],
			"example": {
				"path": "/video.mp4"
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			},
			"copy_reference": "z1X6ATl6aWtzOGq0c3g5Ng",
			"expires": "2045-05-12T15:50:38Z"
		}
	},
	"files/copy_reference/save": {
		"uri": "https://api.dropboxapi.com/2/files/copy_reference/save",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Save a copy reference returned by [copy_reference/get](#filescopy_referenceget-see-docs) to the user's Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "copy_reference",
					"type": "String",
					"desc": "A copy reference returned by  ."
				},
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")",
					"desc": "Path in the user's Dropbox that is the destination."
				}
			],
			"example": {
				"copy_reference": "z1X6ATl6aWtzOGq0c3g5Ng",
				"path": "/video.mp4"
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			}
		}
	},
	"files/create_folder": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a folder at a given path.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to create."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math",
				"autorename": false
			}
		},
		"returnParameters": {
			"metadata": {
				"name": "math",
				"id": "id:a4ayc_80_OEAAAAAAAAAXz",
				"path_lower": "/homework/math",
				"path_display": "/Homework/math",
				"sharing_info": {
					"read_only": false,
					"parent_shared_folder_id": "84528192421",
					"traverse_only": false,
					"no_access": false
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		}
	},
	"files/create_folder_batch": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create multiple folders at once. This route is asynchronous for large batches, which returns a job ID immediately and runs the create folder batch asynchronously. Otherwise, creates the folders and returns the result synchronously for smaller inputs. You can force asynchronous behaviour by using the CreateFolderBatchArg.force_async flag.  Use [create_folder_batch/check](#filescreate_folder_batchcheck-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "paths",
					"type": "List of (String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\"), max_items=10000)",
					"desc": "List of paths to be created in the user's Dropbox. Duplicate path arguments in the batch are considered only once."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict. The default for this field is False."
				},
				{
					"name": "force_async",
					"type": "Boolean",
					"desc": "Whether to force the create to happen asynchronously. The default for this field is False."
				}
			],
			"example": {
				"paths": [
					"/Homework/math"
				],
				"autorename": false,
				"force_async": false
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						"name": "math",
						"id": "id:a4ayc_80_OEAAAAAAAAAXz",
						"path_lower": "/homework/math",
						"path_display": "/Homework/math",
						"sharing_info": {
							"read_only": false,
							"parent_shared_folder_id": "84528192421",
							"traverse_only": false,
							"no_access": false
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						]
					}
				}
			]
		}
	},
	"files/create_folder_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [create_folder_batch](#filescreate_folder_batch-see-docs). If success, it returns list of result for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						"name": "math",
						"id": "id:a4ayc_80_OEAAAAAAAAAXz",
						"path_lower": "/homework/math",
						"path_display": "/Homework/math",
						"sharing_info": {
							"read_only": false,
							"parent_shared_folder_id": "84528192421",
							"traverse_only": false,
							"no_access": false
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						]
					}
				}
			]
		}
	},
	"files/delete": {
		"uri": "https://api.dropboxapi.com/2/files/delete_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete the file or folder at a given path. If the path is a folder, all its contents will be deleted too. A successful response indicates that the file or folder was deleted. The returned metadata will be the corresponding FileMetadata or FolderMetadata for the item at time of deletion, and not a DeletedMetadata object.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to delete."
				},
				{
					"name": "parent_rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Perform delete if given \"rev\" matches the existing file's latest \"rev\". This field does not support deleting a folder. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			}
		}
	},
	"files/delete_batch": {
		"uri": "https://api.dropboxapi.com/2/files/delete_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete multiple files/folders at once. This route is asynchronous, which returns a job ID immediately and runs the delete batch asynchronously. Use [delete_batch/check](#filesdelete_batchcheck-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (DeleteArg)",
					"desc": "",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to delete."
								},
								{
									"name": "parent_rev",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
									"desc": "Perform delete if given \"rev\" matches the existing file's latest \"rev\". This field does not support deleting a folder. This field is optional."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to delete."
				},
				{
					"name": "parent_rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Perform delete if given \"rev\" matches the existing file's latest \"rev\". This field does not support deleting a folder. This field is optional."
				}
			],
			"example": {
				"entries": [
					{
						"path": "/Homework/math/Prime_Numbers.txt"
					}
				]
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					}
				}
			]
		}
	},
	"files/delete_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/delete_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [delete_batch](#filesdelete_batch-see-docs). If success, it returns list of result for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					}
				}
			]
		}
	},
	"files/download": {
		"uri": "https://content.dropboxapi.com/2/files/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Download a file from a user's Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of the file to download."
				},
				{
					"name": "rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Field is deprecated. Please specify revision in path instead. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/download_zip": {
		"uri": "https://content.dropboxapi.com/2/files/download_zip",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Download a folder from the user's Dropbox, as a zip file. The folder must be less than 20 GB in size and any single file within must be less than 4 GB in size. The resulting zip must have fewer than 10,000 total file and folder entries, including the top level folder. The input cannot be a single file.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of the folder to download."
				}
			],
			"example": {
				"path": "/Homework/math"
			}
		},
		"returnParameters": {
			"metadata": {
				"name": "math",
				"id": "id:a4ayc_80_OEAAAAAAAAAXz",
				"path_lower": "/homework/math",
				"path_display": "/Homework/math",
				"sharing_info": {
					"read_only": false,
					"parent_shared_folder_id": "84528192421",
					"traverse_only": false,
					"no_access": false
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		}
	},
	"files/export": {
		"uri": "https://content.dropboxapi.com/2/files/export",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Export a file from a user's Dropbox. This route only supports exporting files that cannot be downloaded directly  and whose ExportResult.file_metadata has ExportInfo.export_as populated.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of the file to be exported."
				},
				{
					"name": "export_format",
					"type": "String?",
					"desc": "The file format to which the file should be exported. This must be one of the formats listed in the file's export_options returned by  . If none is specified, the default format (specified in export_as in file metadata) will be used. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.gsheet"
			}
		},
		"returnParameters": {
			"export_metadata": {
				"name": "Prime_Numbers.xlsx",
				"size": 7189,
				"export_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			},
			"file_metadata": {
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			}
		}
	},
	"files/get_file_lock_batch": {
		"uri": "https://api.dropboxapi.com/2/files/get_file_lock_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the lock metadata for the given list of paths.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (LockFileArg)",
					"desc": "List of 'entries'. Each 'entry' contains a path of the file which will be locked or queried. Duplicate path arguments in the batch are considered only once.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to a file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to a file."
				}
			],
			"example": {
				"entries": [
					{
						"path": "/John Doe/sample/test.pdf"
					}
				]
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					},
					"lock": {
						"content": {
							".tag": "single_user",
							"created": "2015-05-12T15:50:38Z",
							"lock_holder_account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
							"lock_holder_team_id": "dbtid:1234abcd"
						}
					}
				}
			]
		}
	},
	"files/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the metadata for a file or folder. Note: Metadata for the root folder is unsupported.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of a file or folder on Dropbox."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true, DeletedMetadata will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				},
				{
					"name": "include_property_groups",
					"type": "TemplateFilterBase?",
					"desc": "If set to a valid list of template IDs, FileMetadata.property_groups is set if there exists property data associated with the file and each of the listed templates. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "filter_some",
									"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
									"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "filter_some",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
					"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
				}
			],
			"example": {
				"path": "/Homework/math",
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/get_preview": {
		"uri": "https://content.dropboxapi.com/2/files/get_preview",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Get a preview for a file. Currently, PDF previews are generated for files with the following extensions: .ai, .doc, .docm, .docx, .eps, .gdoc, .gslides, .odp, .odt, .pps, .ppsm, .ppsx, .ppt, .pptm, .pptx, .rtf. HTML previews are generated for files with the following extensions: .csv, .ods, .xls, .xlsm, .gsheet, .xlsx. Other formats will return an unsupported extension error.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of the file to preview."
				},
				{
					"name": "rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Field is deprecated. Please specify revision in path instead. This field is optional."
				}
			],
			"example": {
				"path": "/word.docx"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/get_temporary_link": {
		"uri": "https://api.dropboxapi.com/2/files/get_temporary_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get a temporary link to stream content of a file. This link will expire in four hours and afterwards you will get 410 Gone. This URL should not be used to display content directly in the browser. The Content-Type of the link is determined automatically by the file's mime type.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file you want a temporary link to."
				}
			],
			"example": {
				"path": "/video.mp4"
			}
		},
		"returnParameters": {
			"metadata": {
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			},
			"link": "https://content.dropboxapi.com/apitl/1/YXNkZmFzZGcyMzQyMzI0NjU2NDU2NDU2"
		}
	},
	"files/get_temporary_upload_link": {
		"uri": "https://api.dropboxapi.com/2/files/get_temporary_upload_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get a one-time use temporary upload link to upload a file to a Dropbox location.  This endpoint acts as a delayed [upload](#filesupload-see-docs). The returned temporary upload link may be used to make a POST request with the data to be uploaded. The upload will then be perfomed with the CommitInfo previously provided to [get_temporary_upload_link](#filesget_temporary_upload_link-see-docs) but evaluated only upon consumption. Hence, errors stemming from invalid CommitInfo with respect to the state of the user's Dropbox will only be communicated at consumption time. Additionally, these errors are surfaced as generic HTTP 409 Conflict responses, potentially hiding issue details. The maximum temporary upload link duration is 4 hours. Upon consumption or expiration, a new link will have to be generated. Multiple links may exist for a specific upload path at any given time.  The POST request on the temporary upload link must have its Content-Type set to \"application/octet-stream\".  Example temporary upload link consumption request:  curl -X POST https://content.dropboxapi.com/apitul/1/bNi2uIYF51cVBND --header \"Content-Type: application/octet-stream\" --data-binary @local_file.txt  A successful temporary upload link consumption request returns the content hash of the uploaded data in JSON format.  Example successful temporary upload link consumption response: {\"content-hash\": \"599d71033d700ac892a0e48fa61b125d2f5994\"}  An unsuccessful temporary upload link consumption request returns any of the following status codes:  HTTP 400 Bad Request: Content-Type is not one of application/octet-stream and text/plain or request is invalid. HTTP 409 Conflict: The temporary upload link does not exist or is currently unavailable, the upload failed, or another error happened. HTTP 410 Gone: The temporary upload link is expired or consumed.  Example unsuccessful temporary upload link consumption response: Temporary upload link has been recently consumed.",
		"parameters": {
			"list": [
				{
					"name": "commit_info",
					"type": "CommitInfo",
					"desc": "Contains the path and other optional modifiers for the future upload commit. Equivalent to the parameters provided to  .",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								},
								{
									"name": "property_groups",
									"type": "List of (PropertyGroup)?",
									"desc": "List of custom properties to add to file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "strict_conflict",
									"type": "Boolean",
									"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)?",
					"desc": "List of custom properties to add to file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "strict_conflict",
					"type": "Boolean",
					"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
				},
				{
					"name": "duration",
					"type": "Float64(min=60.0, max=14400.0)",
					"desc": "How long before this link expires, in seconds.  Attempting to start an upload with this link longer than this period  of time after link creation will result in an error. The default for this field is 14400.0."
				}
			],
			"example": {
				"commit_info": {
					"path": "/Homework/math/Matrices.txt",
					"mode": "add",
					"autorename": true,
					"mute": false,
					"strict_conflict": false
				},
				"duration": 3600
			}
		},
		"returnParameters": {
			"link": "https://content.dropboxapi.com/apitul/1/bNi2uIYF51cVBND"
		}
	},
	"files/get_thumbnail": {
		"uri": "https://content.dropboxapi.com/2/files/get_thumbnail_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Get a thumbnail for an image. This method currently supports files with the following file extensions: jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB in size won't be converted to a thumbnail.",
		"parameters": {
			"list": [
				{
					"name": "resource",
					"type": "PathOrLink",
					"desc": "Information specifying which file to preview. This could be a path to a file, a shared link pointing to a file, or a shared link pointing to a folder, with a relative path.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
									"desc": ""
								},
								{
									"name": "link",
									"type": "SharedLinkFileInfo",
									"desc": "",
									"parameters": [
										{
											"list": [
												{
													"name": "url",
													"type": "String",
													"desc": "The shared link corresponding to either a file or shared link to a folder. If it is for a folder shared link, we use the path param to determine for which file in the folder the view is for."
												},
												{
													"name": "path",
													"type": "String?",
													"desc": "The path corresponding to a file in a shared link to a folder. Required for shared links to folders. This field is optional."
												},
												{
													"name": "password",
													"type": "String?",
													"desc": "Password for the shared link. Required for password-protected shared links to files  unless it can be read from a cookie. This field is optional."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "url",
									"type": "String",
									"desc": "The shared link corresponding to either a file or shared link to a folder. If it is for a folder shared link, we use the path param to determine for which file in the folder the view is for."
								},
								{
									"name": "path",
									"type": "String?",
									"desc": "The path corresponding to a file in a shared link to a folder. Required for shared links to folders. This field is optional."
								},
								{
									"name": "password",
									"type": "String?",
									"desc": "Password for the shared link. Required for password-protected shared links to files  unless it can be read from a cookie. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "url",
									"type": "String",
									"desc": "The shared link corresponding to either a file or shared link to a folder. If it is for a folder shared link, we use the path param to determine for which file in the folder the view is for."
								},
								{
									"name": "path",
									"type": "String?",
									"desc": "The path corresponding to a file in a shared link to a folder. Required for shared links to folders. This field is optional."
								},
								{
									"name": "password",
									"type": "String?",
									"desc": "Password for the shared link. Required for password-protected shared links to files  unless it can be read from a cookie. This field is optional."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": ""
				},
				{
					"name": "link",
					"type": "SharedLinkFileInfo",
					"desc": "",
					"parameters": [
						{
							"list": [
								{
									"name": "url",
									"type": "String",
									"desc": "The shared link corresponding to either a file or shared link to a folder. If it is for a folder shared link, we use the path param to determine for which file in the folder the view is for."
								},
								{
									"name": "path",
									"type": "String?",
									"desc": "The path corresponding to a file in a shared link to a folder. Required for shared links to folders. This field is optional."
								},
								{
									"name": "password",
									"type": "String?",
									"desc": "Password for the shared link. Required for password-protected shared links to files  unless it can be read from a cookie. This field is optional."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "url",
					"type": "String",
					"desc": "The shared link corresponding to either a file or shared link to a folder. If it is for a folder shared link, we use the path param to determine for which file in the folder the view is for."
				},
				{
					"name": "path",
					"type": "String?",
					"desc": "The path corresponding to a file in a shared link to a folder. Required for shared links to folders. This field is optional."
				},
				{
					"name": "password",
					"type": "String?",
					"desc": "Password for the shared link. Required for password-protected shared links to files  unless it can be read from a cookie. This field is optional."
				},
				{
					"name": "format",
					"type": "ThumbnailFormat",
					"desc": "The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts. The default for this union is jpeg.",
					"parameters": [
						{
							"list": [
								{
									"name": "jpeg",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "png",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "jpeg",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "png",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "size",
					"type": "ThumbnailSize",
					"desc": "The size for the thumbnail image. The default for this union is w64h64.",
					"parameters": [
						{
							"list": [
								{
									"name": "w32h32",
									"type": "Void",
									"desc": "32 by 32 px."
								},
								{
									"name": "w64h64",
									"type": "Void",
									"desc": "64 by 64 px."
								},
								{
									"name": "w128h128",
									"type": "Void",
									"desc": "128 by 128 px."
								},
								{
									"name": "w256h256",
									"type": "Void",
									"desc": "256 by 256 px."
								},
								{
									"name": "w480h320",
									"type": "Void",
									"desc": "480 by 320 px."
								},
								{
									"name": "w640h480",
									"type": "Void",
									"desc": "640 by 480 px."
								},
								{
									"name": "w960h640",
									"type": "Void",
									"desc": "960 by 640 px."
								},
								{
									"name": "w1024h768",
									"type": "Void",
									"desc": "1024 by 768 px."
								},
								{
									"name": "w2048h1536",
									"type": "Void",
									"desc": "2048 by 1536 px."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "w32h32",
					"type": "Void",
					"desc": "32 by 32 px."
				},
				{
					"name": "w64h64",
					"type": "Void",
					"desc": "64 by 64 px."
				},
				{
					"name": "w128h128",
					"type": "Void",
					"desc": "128 by 128 px."
				},
				{
					"name": "w256h256",
					"type": "Void",
					"desc": "256 by 256 px."
				},
				{
					"name": "w480h320",
					"type": "Void",
					"desc": "480 by 320 px."
				},
				{
					"name": "w640h480",
					"type": "Void",
					"desc": "640 by 480 px."
				},
				{
					"name": "w960h640",
					"type": "Void",
					"desc": "960 by 640 px."
				},
				{
					"name": "w1024h768",
					"type": "Void",
					"desc": "1024 by 768 px."
				},
				{
					"name": "w2048h1536",
					"type": "Void",
					"desc": "2048 by 1536 px."
				},
				{
					"name": "mode",
					"type": "ThumbnailMode",
					"desc": "How to resize and crop the image to achieve the desired size. The default for this union is strict.",
					"parameters": [
						{
							"list": [
								{
									"name": "strict",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size."
								},
								{
									"name": "bestfit",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size or its transpose."
								},
								{
									"name": "fitone_bestfit",
									"type": "Void",
									"desc": "Scale down the image to completely cover the given size or its transpose."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "strict",
					"type": "Void",
					"desc": "Scale down the image to fit within the given size."
				},
				{
					"name": "bestfit",
					"type": "Void",
					"desc": "Scale down the image to fit within the given size or its transpose."
				},
				{
					"name": "fitone_bestfit",
					"type": "Void",
					"desc": "Scale down the image to completely cover the given size or its transpose."
				}
			],
			"example": {
				"resource": {
					".tag": "path",
					"path": "/a.docx"
				},
				"format": "jpeg",
				"size": "w64h64",
				"mode": "strict"
			}
		},
		"returnParameters": {
			"file_metadata": {
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			}
		}
	},
	"files/get_thumbnail_batch": {
		"uri": "https://content.dropboxapi.com/2/files/get_thumbnail_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get thumbnails for a list of images. We allow up to 25 thumbnails in a single batch. This method currently supports files with the following file extensions: jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB in size won't be converted to a thumbnail.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (ThumbnailArg)",
					"desc": "List of files to get thumbnails.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
									"desc": "The path to the image file you want to thumbnail."
								},
								{
									"name": "format",
									"type": "ThumbnailFormat",
									"desc": "The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts. The default for this union is jpeg.",
									"parameters": [
										{
											"list": [
												{
													"name": "jpeg",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "png",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "jpeg",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "png",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "size",
									"type": "ThumbnailSize",
									"desc": "The size for the thumbnail image. The default for this union is w64h64.",
									"parameters": [
										{
											"list": [
												{
													"name": "w32h32",
													"type": "Void",
													"desc": "32 by 32 px."
												},
												{
													"name": "w64h64",
													"type": "Void",
													"desc": "64 by 64 px."
												},
												{
													"name": "w128h128",
													"type": "Void",
													"desc": "128 by 128 px."
												},
												{
													"name": "w256h256",
													"type": "Void",
													"desc": "256 by 256 px."
												},
												{
													"name": "w480h320",
													"type": "Void",
													"desc": "480 by 320 px."
												},
												{
													"name": "w640h480",
													"type": "Void",
													"desc": "640 by 480 px."
												},
												{
													"name": "w960h640",
													"type": "Void",
													"desc": "960 by 640 px."
												},
												{
													"name": "w1024h768",
													"type": "Void",
													"desc": "1024 by 768 px."
												},
												{
													"name": "w2048h1536",
													"type": "Void",
													"desc": "2048 by 1536 px."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "w32h32",
									"type": "Void",
									"desc": "32 by 32 px."
								},
								{
									"name": "w64h64",
									"type": "Void",
									"desc": "64 by 64 px."
								},
								{
									"name": "w128h128",
									"type": "Void",
									"desc": "128 by 128 px."
								},
								{
									"name": "w256h256",
									"type": "Void",
									"desc": "256 by 256 px."
								},
								{
									"name": "w480h320",
									"type": "Void",
									"desc": "480 by 320 px."
								},
								{
									"name": "w640h480",
									"type": "Void",
									"desc": "640 by 480 px."
								},
								{
									"name": "w960h640",
									"type": "Void",
									"desc": "960 by 640 px."
								},
								{
									"name": "w1024h768",
									"type": "Void",
									"desc": "1024 by 768 px."
								},
								{
									"name": "w2048h1536",
									"type": "Void",
									"desc": "2048 by 1536 px."
								},
								{
									"name": "mode",
									"type": "ThumbnailMode",
									"desc": "How to resize and crop the image to achieve the desired size. The default for this union is strict.",
									"parameters": [
										{
											"list": [
												{
													"name": "strict",
													"type": "Void",
													"desc": "Scale down the image to fit within the given size."
												},
												{
													"name": "bestfit",
													"type": "Void",
													"desc": "Scale down the image to fit within the given size or its transpose."
												},
												{
													"name": "fitone_bestfit",
													"type": "Void",
													"desc": "Scale down the image to completely cover the given size or its transpose."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "strict",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size."
								},
								{
									"name": "bestfit",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size or its transpose."
								},
								{
									"name": "fitone_bestfit",
									"type": "Void",
									"desc": "Scale down the image to completely cover the given size or its transpose."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "jpeg",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "png",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "w32h32",
									"type": "Void",
									"desc": "32 by 32 px."
								},
								{
									"name": "w64h64",
									"type": "Void",
									"desc": "64 by 64 px."
								},
								{
									"name": "w128h128",
									"type": "Void",
									"desc": "128 by 128 px."
								},
								{
									"name": "w256h256",
									"type": "Void",
									"desc": "256 by 256 px."
								},
								{
									"name": "w480h320",
									"type": "Void",
									"desc": "480 by 320 px."
								},
								{
									"name": "w640h480",
									"type": "Void",
									"desc": "640 by 480 px."
								},
								{
									"name": "w960h640",
									"type": "Void",
									"desc": "960 by 640 px."
								},
								{
									"name": "w1024h768",
									"type": "Void",
									"desc": "1024 by 768 px."
								},
								{
									"name": "w2048h1536",
									"type": "Void",
									"desc": "2048 by 1536 px."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "strict",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size."
								},
								{
									"name": "bestfit",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size or its transpose."
								},
								{
									"name": "fitone_bestfit",
									"type": "Void",
									"desc": "Scale down the image to completely cover the given size or its transpose."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the image file you want to thumbnail."
				},
				{
					"name": "format",
					"type": "ThumbnailFormat",
					"desc": "The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts. The default for this union is jpeg.",
					"parameters": [
						{
							"list": [
								{
									"name": "jpeg",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "png",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "jpeg",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "png",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "size",
					"type": "ThumbnailSize",
					"desc": "The size for the thumbnail image. The default for this union is w64h64.",
					"parameters": [
						{
							"list": [
								{
									"name": "w32h32",
									"type": "Void",
									"desc": "32 by 32 px."
								},
								{
									"name": "w64h64",
									"type": "Void",
									"desc": "64 by 64 px."
								},
								{
									"name": "w128h128",
									"type": "Void",
									"desc": "128 by 128 px."
								},
								{
									"name": "w256h256",
									"type": "Void",
									"desc": "256 by 256 px."
								},
								{
									"name": "w480h320",
									"type": "Void",
									"desc": "480 by 320 px."
								},
								{
									"name": "w640h480",
									"type": "Void",
									"desc": "640 by 480 px."
								},
								{
									"name": "w960h640",
									"type": "Void",
									"desc": "960 by 640 px."
								},
								{
									"name": "w1024h768",
									"type": "Void",
									"desc": "1024 by 768 px."
								},
								{
									"name": "w2048h1536",
									"type": "Void",
									"desc": "2048 by 1536 px."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "w32h32",
					"type": "Void",
					"desc": "32 by 32 px."
				},
				{
					"name": "w64h64",
					"type": "Void",
					"desc": "64 by 64 px."
				},
				{
					"name": "w128h128",
					"type": "Void",
					"desc": "128 by 128 px."
				},
				{
					"name": "w256h256",
					"type": "Void",
					"desc": "256 by 256 px."
				},
				{
					"name": "w480h320",
					"type": "Void",
					"desc": "480 by 320 px."
				},
				{
					"name": "w640h480",
					"type": "Void",
					"desc": "640 by 480 px."
				},
				{
					"name": "w960h640",
					"type": "Void",
					"desc": "960 by 640 px."
				},
				{
					"name": "w1024h768",
					"type": "Void",
					"desc": "1024 by 768 px."
				},
				{
					"name": "w2048h1536",
					"type": "Void",
					"desc": "2048 by 1536 px."
				},
				{
					"name": "mode",
					"type": "ThumbnailMode",
					"desc": "How to resize and crop the image to achieve the desired size. The default for this union is strict.",
					"parameters": [
						{
							"list": [
								{
									"name": "strict",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size."
								},
								{
									"name": "bestfit",
									"type": "Void",
									"desc": "Scale down the image to fit within the given size or its transpose."
								},
								{
									"name": "fitone_bestfit",
									"type": "Void",
									"desc": "Scale down the image to completely cover the given size or its transpose."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "strict",
					"type": "Void",
					"desc": "Scale down the image to fit within the given size."
				},
				{
					"name": "bestfit",
					"type": "Void",
					"desc": "Scale down the image to fit within the given size or its transpose."
				},
				{
					"name": "fitone_bestfit",
					"type": "Void",
					"desc": "Scale down the image to completely cover the given size or its transpose."
				}
			],
			"example": {
				"entries": [
					{
						"path": "/image.jpg",
						"format": "jpeg",
						"size": "w64h64",
						"mode": "strict"
					}
				]
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "success",
					"metadata": {
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					},
					"thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAdcAAABrCAMAAAI="
				}
			]
		}
	},
	"files/list_folder": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Starts returning the contents of a folder. If the result's ListFolderResult.has_more field is true, call [list_folder/continue](#fileslist_foldercontinue-see-docs) with the returned ListFolderResult.cursor to retrieve more entries. If you're using ListFolderArg.recursive set to true to keep a local cache of the contents of a Dropbox account, iterate through each entry in order and process them as follows to keep your local state in sync: For each FileMetadata, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it and remove all its children. For each FolderMetadata, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it but leave the children as they are. Check the new entry's FolderSharingInfo.read_only and set all its children's read-only statuses to match. For each DeletedMetadata, if your local state has something at the given path, remove it and all its children. If there's nothing at the given path, ignore this entry. Note: auth.RateLimitError may be returned if multiple [list_folder](#fileslist_folder-see-docs) or [list_folder/continue](#fileslist_foldercontinue-see-docs) calls with same parameters are made simultaneously by same API app for same user. If your app implements retry logic, please hold off the retry until the previous request finishes.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)?|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file."
				},
				{
					"name": "recursive",
					"type": "Boolean",
					"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "Field is deprecated. If true, FileMetadata.media_info is set for photo and video. This parameter will no longer have an effect starting December 2, 2019. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				},
				{
					"name": "include_mounted_folders",
					"type": "Boolean",
					"desc": "If true, the results will include entries under mounted folders which includes app folder, shared folder and team folder. The default for this field is True."
				},
				{
					"name": "limit",
					"type": "UInt32(min=1, max=2000)?",
					"desc": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases. This field is optional."
				},
				{
					"name": "shared_link",
					"type": "SharedLink?",
					"desc": "A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, ListFolderArg.path will be relative to root of the shared link. Only non-recursive mode is supported for shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "url",
									"type": "String",
									"desc": "Shared link url."
								},
								{
									"name": "password",
									"type": "String?",
									"desc": "Password for the shared link. This field is optional."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "url",
					"type": "String",
					"desc": "Shared link url."
				},
				{
					"name": "password",
					"type": "String?",
					"desc": "Password for the shared link. This field is optional."
				},
				{
					"name": "include_property_groups",
					"type": "TemplateFilterBase?",
					"desc": "If set to a valid list of template IDs, FileMetadata.property_groups is set if there exists property data associated with the file and each of the listed templates. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "filter_some",
									"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
									"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "filter_some",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
					"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
				},
				{
					"name": "include_non_downloadable_files",
					"type": "Boolean",
					"desc": "If true, include files that are not downloadable, i.e. Google Docs. The default for this field is True."
				}
			],
			"example": {
				"path": "/Homework/math",
				"recursive": false,
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false,
				"include_mounted_folders": true,
				"include_non_downloadable_files": true
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "file",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"is_downloadable": true,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
					"file_lock_info": {
						"is_lockholder": true,
						"lockholder_name": "Imaginary User",
						"created": "2015-05-12T15:50:38Z"
					}
				},
				{
					".tag": "folder",
					"name": "math",
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path_lower": "/homework/math",
					"path_display": "/Homework/math",
					"sharing_info": {
						"read_only": false,
						"parent_shared_folder_id": "84528192421",
						"traverse_only": false,
						"no_access": false
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": false
		}
	},
	"files/list_folder/continue": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_folder](#fileslist_folder-see-docs), use this to paginate through all files and retrieve updates to the folder, following the same rules as documented for [list_folder](#fileslist_folder-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String(min_length=1)",
					"desc": "The cursor returned by your last call to   or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "file",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"is_downloadable": true,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
					"file_lock_info": {
						"is_lockholder": true,
						"lockholder_name": "Imaginary User",
						"created": "2015-05-12T15:50:38Z"
					}
				},
				{
					".tag": "folder",
					"name": "math",
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path_lower": "/homework/math",
					"path_display": "/Homework/math",
					"sharing_info": {
						"read_only": false,
						"parent_shared_folder_id": "84528192421",
						"traverse_only": false,
						"no_access": false
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": false
		}
	},
	"files/list_folder/get_latest_cursor": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/get_latest_cursor",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "A way to quickly get a cursor for the folder's state. Unlike [list_folder](#fileslist_folder-see-docs), [list_folder/get_latest_cursor](#fileslist_folderget_latest_cursor-see-docs) doesn't return any entries. This endpoint is for app which only needs to know about new files and modifications and doesn't need to know about files that already exist in Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)?|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file."
				},
				{
					"name": "recursive",
					"type": "Boolean",
					"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "Field is deprecated. If true, FileMetadata.media_info is set for photo and video. This parameter will no longer have an effect starting December 2, 2019. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				},
				{
					"name": "include_mounted_folders",
					"type": "Boolean",
					"desc": "If true, the results will include entries under mounted folders which includes app folder, shared folder and team folder. The default for this field is True."
				},
				{
					"name": "limit",
					"type": "UInt32(min=1, max=2000)?",
					"desc": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases. This field is optional."
				},
				{
					"name": "shared_link",
					"type": "SharedLink?",
					"desc": "A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, ListFolderArg.path will be relative to root of the shared link. Only non-recursive mode is supported for shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "url",
									"type": "String",
									"desc": "Shared link url."
								},
								{
									"name": "password",
									"type": "String?",
									"desc": "Password for the shared link. This field is optional."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "url",
					"type": "String",
					"desc": "Shared link url."
				},
				{
					"name": "password",
					"type": "String?",
					"desc": "Password for the shared link. This field is optional."
				},
				{
					"name": "include_property_groups",
					"type": "TemplateFilterBase?",
					"desc": "If set to a valid list of template IDs, FileMetadata.property_groups is set if there exists property data associated with the file and each of the listed templates. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "filter_some",
									"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
									"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "filter_some",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
					"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
				},
				{
					"name": "include_non_downloadable_files",
					"type": "Boolean",
					"desc": "If true, include files that are not downloadable, i.e. Google Docs. The default for this field is True."
				}
			],
			"example": {
				"path": "/Homework/math",
				"recursive": false,
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false,
				"include_mounted_folders": true,
				"include_non_downloadable_files": true
			}
		},
		"returnParameters": {
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"files/list_folder/longpoll": {
		"uri": "https://notify.dropboxapi.com/2/files/list_folder/longpoll",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "A longpoll endpoint to wait for changes on an account. In conjunction with [list_folder/continue](#fileslist_foldercontinue-see-docs), this call gives you a low-latency way to monitor an account for file changes. The connection will block until there are changes available or a timeout occurs. This endpoint is useful mostly for client-side apps. If you're looking for server-side notifications, check out our webhooks documentation.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String(min_length=1)",
					"desc": "A cursor as returned by   or  . Cursors retrieved by setting ListFolderArg.include_media_info to true are not supported."
				},
				{
					"name": "timeout",
					"type": "UInt64(min=30, max=480)",
					"desc": "A timeout in seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts. The default for this field is 30."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"timeout": 30
			}
		},
		"returnParameters": {
			"changes": true
		}
	},
	"files/list_revisions": {
		"uri": "https://api.dropboxapi.com/2/files/list_revisions",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns revisions for files based on a file path or a file id. The file path or file id is identified from the latest file entry at the given file path or id. This end point allows your app to query either by file path or file id by setting the mode parameter appropriately. In the ListRevisionsMode.path (default) mode, all revisions at the same file path as the latest file entry are returned. If revisions with the same file id are desired, then mode must be set to ListRevisionsMode.id. The ListRevisionsMode.id mode is useful to retrieve revisions for a given file across moves or renames.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file you want to see the revisions of."
				},
				{
					"name": "mode",
					"type": "ListRevisionsMode",
					"desc": "Determines the behavior of the API in listing the revisions for a given file path or id. The default for this union is path.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "Void",
									"desc": "Returns revisions with the same file path as identified by the latest file entry at the given file path or id."
								},
								{
									"name": "id",
									"type": "Void",
									"desc": "Returns revisions with the same file id as identified by the latest file entry at the given file path or id."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "Void",
					"desc": "Returns revisions with the same file path as identified by the latest file entry at the given file path or id."
				},
				{
					"name": "id",
					"type": "Void",
					"desc": "Returns revisions with the same file id as identified by the latest file entry at the given file path or id."
				},
				{
					"name": "limit",
					"type": "UInt64(min=1, max=100)",
					"desc": "The maximum number of revision entries returned. The default for this field is 10."
				}
			],
			"example": {
				"path": "/root/word.docx",
				"mode": "path",
				"limit": 10
			}
		},
		"returnParameters": {
			"is_deleted": false,
			"entries": [
				{
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"is_downloadable": true,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
					"file_lock_info": {
						"is_lockholder": true,
						"lockholder_name": "Imaginary User",
						"created": "2015-05-12T15:50:38Z"
					}
				}
			]
		}
	},
	"files/lock_file_batch": {
		"uri": "https://api.dropboxapi.com/2/files/lock_file_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Lock the files at the given paths. A locked file will be writable only by the lock holder. A successful response indicates that the file has been locked. Returns a list of the locked file paths and their metadata after this operation.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (LockFileArg)",
					"desc": "List of 'entries'. Each 'entry' contains a path of the file which will be locked or queried. Duplicate path arguments in the batch are considered only once.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to a file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to a file."
				}
			],
			"example": {
				"entries": [
					{
						"path": "/John Doe/sample/test.pdf"
					}
				]
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					},
					"lock": {
						"content": {
							".tag": "single_user",
							"created": "2015-05-12T15:50:38Z",
							"lock_holder_account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
							"lock_holder_team_id": "dbtid:1234abcd"
						}
					}
				}
			]
		}
	},
	"files/move": {
		"uri": "https://api.dropboxapi.com/2/files/move_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Move a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be moved. Note that we do not currently support case-only renaming.",
		"parameters": {
			"list": [
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "Field is deprecated. This flag has no effect. The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"from_path": "/Homework/math",
				"to_path": "/Homework/algebra",
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"is_downloadable": true,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
				"file_lock_info": {
					"is_lockholder": true,
					"lockholder_name": "Imaginary User",
					"created": "2015-05-12T15:50:38Z"
				}
			}
		}
	},
	"files/move_batch": {
		"uri": "https://api.dropboxapi.com/2/files/move_batch_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Move multiple files or folders to different locations at once in the user's Dropbox. Note that we do not currently support case-only renaming. This route will replace [move_batch:1](#filesmove_batch:1-see-docs). The main difference is this route will return status for each entry, while [move_batch:1](#filesmove_batch:1-see-docs) raises failure if any entry fails. This route will either finish synchronously, or return a job ID and do the async move job in background. Please use [move_batch/check:2](#filesmove_batchcheck:2-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (RelocationPath, min_items=1)",
					"desc": "List of entries to be moved or copied. Each entry is RelocationPath.",
					"parameters": [
						{
							"list": [
								{
									"name": "from_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to be copied or moved."
								},
								{
									"name": "to_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox that is the destination."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"entries": [
					{
						"from_path": "/Homework/math",
						"to_path": "/Homework/algebra"
					}
				],
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"success": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					}
				}
			]
		}
	},
	"files/move_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/move_batch/check_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [move_batch:2](#filesmove_batch:2-see-docs). It returns list of results for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"success": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					}
				}
			]
		}
	},
	"files/paper/create": {
		"uri": "https://api.dropboxapi.com/2/files/paper/create",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Creates a new Paper doc with the provided content.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")",
					"desc": "The fully qualified path to the location in the user's Dropbox where the Paper Doc should be created. This should include the document's title and end with .paper."
				},
				{
					"name": "import_format",
					"type": "ImportFormat",
					"desc": "The format of the provided data.",
					"parameters": [
						{
							"list": [
								{
									"name": "html",
									"type": "Void",
									"desc": "The provided data is interpreted as standard HTML."
								},
								{
									"name": "markdown",
									"type": "Void",
									"desc": "The provided data is interpreted as markdown."
								},
								{
									"name": "plain_text",
									"type": "Void",
									"desc": "The provided data is interpreted as plain text."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "html",
					"type": "Void",
					"desc": "The provided data is interpreted as standard HTML."
				},
				{
					"name": "markdown",
					"type": "Void",
					"desc": "The provided data is interpreted as markdown."
				},
				{
					"name": "plain_text",
					"type": "Void",
					"desc": "The provided data is interpreted as plain text."
				}
			],
			"example": {
				"path": "/Paper Docs/New Doc.paper",
				"import_format": "html"
			}
		},
		"returnParameters": {
			"url": "https://www.dropbox.com/scl/xxx.paper?dl=0",
			"result_path": "/Paper Docs/New Doc.paper",
			"file_id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"paper_revision": 1
		}
	},
	"files/paper/update": {
		"uri": "https://api.dropboxapi.com/2/files/paper/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Updates an existing Paper doc with the provided content.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to update. The path must correspond to a Paper doc or an error will be returned."
				},
				{
					"name": "import_format",
					"type": "ImportFormat",
					"desc": "The format of the provided data.",
					"parameters": [
						{
							"list": [
								{
									"name": "html",
									"type": "Void",
									"desc": "The provided data is interpreted as standard HTML."
								},
								{
									"name": "markdown",
									"type": "Void",
									"desc": "The provided data is interpreted as markdown."
								},
								{
									"name": "plain_text",
									"type": "Void",
									"desc": "The provided data is interpreted as plain text."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "html",
					"type": "Void",
					"desc": "The provided data is interpreted as standard HTML."
				},
				{
					"name": "markdown",
					"type": "Void",
					"desc": "The provided data is interpreted as markdown."
				},
				{
					"name": "plain_text",
					"type": "Void",
					"desc": "The provided data is interpreted as plain text."
				},
				{
					"name": "doc_update_policy",
					"type": "PaperDocUpdatePolicy",
					"desc": "How the provided content should be applied to the doc.",
					"parameters": [
						{
							"list": [
								{
									"name": "update",
									"type": "Void",
									"desc": "Sets the doc content to the provided content if the provided paper_revision matches the latest doc revision. Otherwise, returns an error."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Sets the doc content to the provided content without checking paper_revision."
								},
								{
									"name": "prepend",
									"type": "Void",
									"desc": "Adds the provided content to the beginning of the doc without checking paper_revision."
								},
								{
									"name": "append",
									"type": "Void",
									"desc": "Adds the provided content to the end of the doc without checking paper_revision."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "update",
					"type": "Void",
					"desc": "Sets the doc content to the provided content if the provided paper_revision matches the latest doc revision. Otherwise, returns an error."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Sets the doc content to the provided content without checking paper_revision."
				},
				{
					"name": "prepend",
					"type": "Void",
					"desc": "Adds the provided content to the beginning of the doc without checking paper_revision."
				},
				{
					"name": "append",
					"type": "Void",
					"desc": "Adds the provided content to the end of the doc without checking paper_revision."
				},
				{
					"name": "paper_revision",
					"type": "Int64?",
					"desc": "The latest doc revision. Required when doc_update_policy is update. This value must match the current revision of the doc or error revision_mismatch will be returned. This field is optional."
				}
			],
			"example": {
				"path": "/Paper Docs/My Doc.paper",
				"import_format": "html",
				"doc_update_policy": "update",
				"paper_revision": 123
			}
		},
		"returnParameters": {
			"paper_revision": 124
		}
	},
	"files/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/files/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Permanently delete the file or folder at a given path (see https://www.dropbox.com/en/help/40). If the given file or folder is not yet deleted, this route will first delete it. It is possible for this route to successfully delete, then fail to permanently delete. Note: This endpoint is only available for Dropbox Business apps.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to delete."
				},
				{
					"name": "parent_rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Perform delete if given \"rev\" matches the existing file's latest \"rev\". This field does not support deleting a folder. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": null
	},
	"files/restore": {
		"uri": "https://api.dropboxapi.com/2/files/restore",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Restore a specific revision of a file to the given path.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to save the restored file."
				},
				{
					"name": "rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "The revision to restore."
				}
			],
			"example": {
				"path": "/root/word.docx",
				"rev": "a1c10ce0dd78"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/save_url": {
		"uri": "https://api.dropboxapi.com/2/files/save_url",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Save the data from a specified URL into a file in user's Dropbox. Note that the transfer from the URL must complete within 5 minutes, or the operation will time out and the job will fail. If the given path already exists, the file will be renamed to avoid the conflict (e.g. myfile (1).txt).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")",
					"desc": "The path in Dropbox where the URL will be saved to."
				},
				{
					"name": "url",
					"type": "String",
					"desc": "The URL to be saved."
				}
			],
			"example": {
				"path": "/a.txt",
				"url": "http://example.com/a.txt"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/save_url/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/files/save_url/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Check the status of a [save_url](#filessave_url-see-docs) job.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "in_progress"
		}
	},
	"files/search": {
		"uri": "https://api.dropboxapi.com/2/files/search_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Searches for files and folders. Note: [search:2](#filessearch:2-see-docs) along with [search/continue:2](#filessearchcontinue:2-see-docs) can only be used to retrieve a maximum of 10,000 matches. Recent changes may not immediately be reflected in search results due to a short delay in indexing. Duplicate results may be returned across pages. Some results may not be returned.",
		"parameters": {
			"list": [
				{
					"name": "query",
					"type": "String(max_length=1000)",
					"desc": "The string to search for. May match across multiple fields based on the request arguments."
				},
				{
					"name": "options",
					"type": "SearchOptions?",
					"desc": "Options for more targeted search results. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)?|id:.*|(ns:[0-9]+(/.*)?)\")?",
									"desc": "Scopes the search to a path in the user's Dropbox. Searches the entire Dropbox if not specified. This field is optional."
								},
								{
									"name": "max_results",
									"type": "UInt64(min=1, max=1000)",
									"desc": "The maximum number of search results to return. The default for this field is 100."
								},
								{
									"name": "order_by",
									"type": "SearchOrderBy?",
									"desc": "Specified property of the order of search results. By default, results are sorted by relevance. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "relevance",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "last_modified_time",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "relevance",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "last_modified_time",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "file_status",
									"type": "FileStatus",
									"desc": "Restricts search to the given file status. The default for this union is active.",
									"parameters": [
										{
											"list": [
												{
													"name": "active",
													"type": "Void",
													"desc": ""
												},
												{
													"name": "deleted",
													"type": "Void",
													"desc": ""
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "active",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "deleted",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "filename_only",
									"type": "Boolean",
									"desc": "Restricts search to only match on filenames. The default for this field is False."
								},
								{
									"name": "file_extensions",
									"type": "List of (String)?",
									"desc": "Restricts search to only the extensions specified. Only supported for active file search. This field is optional."
								},
								{
									"name": "file_categories",
									"type": "List of (FileCategory)?",
									"desc": "Restricts search to only the file categories specified. Only supported for active file search. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "image",
													"type": "Void",
													"desc": "jpg, png, gif, and more."
												},
												{
													"name": "document",
													"type": "Void",
													"desc": "doc, docx, txt, and more."
												},
												{
													"name": "pdf",
													"type": "Void",
													"desc": "pdf."
												},
												{
													"name": "spreadsheet",
													"type": "Void",
													"desc": "xlsx, xls, csv, and more."
												},
												{
													"name": "presentation",
													"type": "Void",
													"desc": "ppt, pptx, key, and more."
												},
												{
													"name": "audio",
													"type": "Void",
													"desc": "mp3, wav, mid, and more."
												},
												{
													"name": "video",
													"type": "Void",
													"desc": "mov, wmv, mp4, and more."
												},
												{
													"name": "folder",
													"type": "Void",
													"desc": "dropbox folder."
												},
												{
													"name": "paper",
													"type": "Void",
													"desc": "dropbox paper doc."
												},
												{
													"name": "others",
													"type": "Void",
													"desc": "any file not in one of the categories above."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "image",
									"type": "Void",
									"desc": "jpg, png, gif, and more."
								},
								{
									"name": "document",
									"type": "Void",
									"desc": "doc, docx, txt, and more."
								},
								{
									"name": "pdf",
									"type": "Void",
									"desc": "pdf."
								},
								{
									"name": "spreadsheet",
									"type": "Void",
									"desc": "xlsx, xls, csv, and more."
								},
								{
									"name": "presentation",
									"type": "Void",
									"desc": "ppt, pptx, key, and more."
								},
								{
									"name": "audio",
									"type": "Void",
									"desc": "mp3, wav, mid, and more."
								},
								{
									"name": "video",
									"type": "Void",
									"desc": "mov, wmv, mp4, and more."
								},
								{
									"name": "folder",
									"type": "Void",
									"desc": "dropbox folder."
								},
								{
									"name": "paper",
									"type": "Void",
									"desc": "dropbox paper doc."
								},
								{
									"name": "others",
									"type": "Void",
									"desc": "any file not in one of the categories above."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "relevance",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "last_modified_time",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "active",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "deleted",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "image",
									"type": "Void",
									"desc": "jpg, png, gif, and more."
								},
								{
									"name": "document",
									"type": "Void",
									"desc": "doc, docx, txt, and more."
								},
								{
									"name": "pdf",
									"type": "Void",
									"desc": "pdf."
								},
								{
									"name": "spreadsheet",
									"type": "Void",
									"desc": "xlsx, xls, csv, and more."
								},
								{
									"name": "presentation",
									"type": "Void",
									"desc": "ppt, pptx, key, and more."
								},
								{
									"name": "audio",
									"type": "Void",
									"desc": "mp3, wav, mid, and more."
								},
								{
									"name": "video",
									"type": "Void",
									"desc": "mov, wmv, mp4, and more."
								},
								{
									"name": "folder",
									"type": "Void",
									"desc": "dropbox folder."
								},
								{
									"name": "paper",
									"type": "Void",
									"desc": "dropbox paper doc."
								},
								{
									"name": "others",
									"type": "Void",
									"desc": "any file not in one of the categories above."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)?|id:.*|(ns:[0-9]+(/.*)?)\")?",
					"desc": "Scopes the search to a path in the user's Dropbox. Searches the entire Dropbox if not specified. This field is optional."
				},
				{
					"name": "max_results",
					"type": "UInt64(min=1, max=1000)",
					"desc": "The maximum number of search results to return. The default for this field is 100."
				},
				{
					"name": "order_by",
					"type": "SearchOrderBy?",
					"desc": "Specified property of the order of search results. By default, results are sorted by relevance. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "relevance",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "last_modified_time",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "relevance",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "last_modified_time",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "file_status",
					"type": "FileStatus",
					"desc": "Restricts search to the given file status. The default for this union is active.",
					"parameters": [
						{
							"list": [
								{
									"name": "active",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "deleted",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "active",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "deleted",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "filename_only",
					"type": "Boolean",
					"desc": "Restricts search to only match on filenames. The default for this field is False."
				},
				{
					"name": "file_extensions",
					"type": "List of (String)?",
					"desc": "Restricts search to only the extensions specified. Only supported for active file search. This field is optional."
				},
				{
					"name": "file_categories",
					"type": "List of (FileCategory)?",
					"desc": "Restricts search to only the file categories specified. Only supported for active file search. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "image",
									"type": "Void",
									"desc": "jpg, png, gif, and more."
								},
								{
									"name": "document",
									"type": "Void",
									"desc": "doc, docx, txt, and more."
								},
								{
									"name": "pdf",
									"type": "Void",
									"desc": "pdf."
								},
								{
									"name": "spreadsheet",
									"type": "Void",
									"desc": "xlsx, xls, csv, and more."
								},
								{
									"name": "presentation",
									"type": "Void",
									"desc": "ppt, pptx, key, and more."
								},
								{
									"name": "audio",
									"type": "Void",
									"desc": "mp3, wav, mid, and more."
								},
								{
									"name": "video",
									"type": "Void",
									"desc": "mov, wmv, mp4, and more."
								},
								{
									"name": "folder",
									"type": "Void",
									"desc": "dropbox folder."
								},
								{
									"name": "paper",
									"type": "Void",
									"desc": "dropbox paper doc."
								},
								{
									"name": "others",
									"type": "Void",
									"desc": "any file not in one of the categories above."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "image",
					"type": "Void",
					"desc": "jpg, png, gif, and more."
				},
				{
					"name": "document",
					"type": "Void",
					"desc": "doc, docx, txt, and more."
				},
				{
					"name": "pdf",
					"type": "Void",
					"desc": "pdf."
				},
				{
					"name": "spreadsheet",
					"type": "Void",
					"desc": "xlsx, xls, csv, and more."
				},
				{
					"name": "presentation",
					"type": "Void",
					"desc": "ppt, pptx, key, and more."
				},
				{
					"name": "audio",
					"type": "Void",
					"desc": "mp3, wav, mid, and more."
				},
				{
					"name": "video",
					"type": "Void",
					"desc": "mov, wmv, mp4, and more."
				},
				{
					"name": "folder",
					"type": "Void",
					"desc": "dropbox folder."
				},
				{
					"name": "paper",
					"type": "Void",
					"desc": "dropbox paper doc."
				},
				{
					"name": "others",
					"type": "Void",
					"desc": "any file not in one of the categories above."
				},
				{
					"name": "match_field_options",
					"type": "SearchMatchFieldOptions?",
					"desc": "Options for search results match fields. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "include_highlights",
									"type": "Boolean",
									"desc": "Whether to include highlight span from file title. The default for this field is False."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "include_highlights",
					"type": "Boolean",
					"desc": "Whether to include highlight span from file title. The default for this field is False."
				},
				{
					"name": "include_highlights",
					"type": "Boolean?",
					"desc": "Field is deprecated. Deprecated and moved this option to SearchMatchFieldOptions. This field is optional."
				}
			],
			"example": {
				"query": "cat",
				"options": {
					"path": "/Folder",
					"max_results": 20,
					"file_status": "active",
					"filename_only": false
				},
				"match_field_options": {
					"include_highlights": false
				}
			}
		},
		"returnParameters": {
			"matches": [
				{
					"metadata": {
						".tag": "metadata",
						"metadata": {
							".tag": "file",
							"name": "Prime_Numbers.txt",
							"id": "id:a4ayc_80_OEAAAAAAAAAXw",
							"client_modified": "2015-05-12T15:50:38Z",
							"server_modified": "2015-05-12T15:50:38Z",
							"rev": "a1c10ce0dd78",
							"size": 7212,
							"path_lower": "/homework/math/prime_numbers.txt",
							"path_display": "/Homework/math/Prime_Numbers.txt",
							"sharing_info": {
								"read_only": true,
								"parent_shared_folder_id": "84528192421",
								"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
							},
							"is_downloadable": true,
							"has_explicit_shared_members": false,
							"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
						}
					}
				}
			],
			"has_more": false
		}
	},
	"files/search/continue": {
		"uri": "https://api.dropboxapi.com/2/files/search/continue_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Fetches the next page of search results returned from [search:2](#filessearch:2-see-docs). Note: [search:2](#filessearch:2-see-docs) along with [search/continue:2](#filessearchcontinue:2-see-docs) can only be used to retrieve a maximum of 10,000 matches. Recent changes may not immediately be reflected in search results due to a short delay in indexing. Duplicate results may be returned across pages. Some results may not be returned.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String(min_length=1)",
					"desc": "The cursor returned by your last call to  . Used to fetch the next page of results."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"matches": [
				{
					"metadata": {
						".tag": "metadata",
						"metadata": {
							".tag": "file",
							"name": "Prime_Numbers.txt",
							"id": "id:a4ayc_80_OEAAAAAAAAAXw",
							"client_modified": "2015-05-12T15:50:38Z",
							"server_modified": "2015-05-12T15:50:38Z",
							"rev": "a1c10ce0dd78",
							"size": 7212,
							"path_lower": "/homework/math/prime_numbers.txt",
							"path_display": "/Homework/math/Prime_Numbers.txt",
							"sharing_info": {
								"read_only": true,
								"parent_shared_folder_id": "84528192421",
								"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
							},
							"is_downloadable": true,
							"has_explicit_shared_members": false,
							"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
						}
					}
				}
			],
			"has_more": false
		}
	},
	"files/unlock_file_batch": {
		"uri": "https://api.dropboxapi.com/2/files/unlock_file_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Unlock the files at the given paths. A locked file can only be unlocked by the lock holder or, if a business account, a team admin. A successful response indicates that the file has been unlocked. Returns a list of the unlocked file paths and their metadata after this operation.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (UnlockFileArg)",
					"desc": "List of 'entries'. Each 'entry' contains a path of the file which will be unlocked. Duplicate path arguments in the batch are considered only once.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to a file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to a file."
				}
			],
			"example": {
				"entries": [
					{
						"path": "/John Doe/sample/test.pdf"
					}
				]
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"is_downloadable": true,
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
						"file_lock_info": {
							"is_lockholder": true,
							"lockholder_name": "Imaginary User",
							"created": "2015-05-12T15:50:38Z"
						}
					},
					"lock": {
						"content": {
							".tag": "single_user",
							"created": "2015-05-12T15:50:38Z",
							"lock_holder_account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
							"lock_holder_team_id": "dbtid:1234abcd"
						}
					}
				}
			]
		}
	},
	"files/upload": {
		"uri": "https://content.dropboxapi.com/2/files/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Create a new file with the contents provided in the request. Do not use this to upload a file larger than 150 MB. Instead, create an upload session with [upload_session/start](#filesupload_sessionstart-see-docs). Calls to this endpoint will count as data transport calls for any Dropbox Business teams with a limit on the number of data transport calls allowed per month. For more information, see the Data transport limit page.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)?",
					"desc": "List of custom properties to add to file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "strict_conflict",
					"type": "Boolean",
					"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math/Matrices.txt",
				"mode": "add",
				"autorename": true,
				"mute": false,
				"strict_conflict": false
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/upload_session/append": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/append_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Append more data to an upload session. When the parameter close is set, this call will close the session. A single request should not upload more than 150 MB. The maximum size of a file one can upload to an upload session is 350 GB. Calls to this endpoint will count as data transport calls for any Dropbox Business teams with a limit on the number of data transport calls allowed per month. For more information, see the Data transport limit page.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "UploadSessionCursor",
					"desc": "Contains the upload session ID and the offset.",
					"parameters": [
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				},
				{
					"name": "close",
					"type": "Boolean",
					"desc": "If true, the current session will be closed, at which point you won't be able to call   anymore with the current session. The default for this field is False."
				}
			],
			"example": {
				"cursor": {
					"session_id": "1234faaf0678bcde",
					"offset": 0
				},
				"close": false
			}
		},
		"returnParameters": null
	},
	"files/upload_session/finish": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/finish",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Finish an upload session and save the uploaded data to the given file path. A single request should not upload more than 150 MB. The maximum size of a file one can upload to an upload session is 350 GB. Calls to this endpoint will count as data transport calls for any Dropbox Business teams with a limit on the number of data transport calls allowed per month. For more information, see the Data transport limit page.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "UploadSessionCursor",
					"desc": "Contains the upload session ID and the offset.",
					"parameters": [
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				},
				{
					"name": "commit",
					"type": "CommitInfo",
					"desc": "Contains the path and other optional modifiers for the commit.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								},
								{
									"name": "property_groups",
									"type": "List of (PropertyGroup)?",
									"desc": "List of custom properties to add to file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "strict_conflict",
									"type": "Boolean",
									"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)?",
					"desc": "List of custom properties to add to file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "strict_conflict",
					"type": "Boolean",
					"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
				}
			],
			"example": {
				"cursor": {
					"session_id": "1234faaf0678bcde",
					"offset": 0
				},
				"commit": {
					"path": "/Homework/math/Matrices.txt",
					"mode": "add",
					"autorename": true,
					"mute": false,
					"strict_conflict": false
				}
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"files/upload_session/finish_batch": {
		"uri": "https://api.dropboxapi.com/2/files/upload_session/finish_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "This route helps you commit many files at once into a user's Dropbox. Use [upload_session/start](#filesupload_sessionstart-see-docs) and [upload_session/append:2](#filesupload_sessionappend:2-see-docs) to upload file contents. We recommend uploading many files in parallel to increase throughput. Once the file contents have been uploaded, rather than calling [upload_session/finish](#filesupload_sessionfinish-see-docs), use this route to finish all your upload sessions in a single request. UploadSessionStartArg.close or UploadSessionAppendArg.close needs to be true for the last [upload_session/start](#filesupload_sessionstart-see-docs) or [upload_session/append:2](#filesupload_sessionappend:2-see-docs) call. The maximum size of a file one can upload to an upload session is 350 GB. This route will return a job_id immediately and do the async commit job in background. Use [upload_session/finish_batch/check](#filesupload_sessionfinish_batchcheck-see-docs) to check the job status. For the same account, this route should be executed serially. That means you should not start the next job before current job finishes. We allow up to 1000 entries in a single request. Calls to this endpoint will count as data transport calls for any Dropbox Business teams with a limit on the number of data transport calls allowed per month. For more information, see the Data transport limit page.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (UploadSessionFinishArg, max_items=1000)",
					"desc": "Commit information for each file in the batch.",
					"parameters": [
						{
							"list": [
								{
									"name": "cursor",
									"type": "UploadSessionCursor",
									"desc": "Contains the upload session ID and the offset.",
									"parameters": [
										{
											"list": [
												{
													"name": "session_id",
													"type": "String",
													"desc": "The upload session ID (returned by  )."
												},
												{
													"name": "offset",
													"type": "UInt64",
													"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								},
								{
									"name": "commit",
									"type": "CommitInfo",
									"desc": "Contains the path and other optional modifiers for the commit.",
									"parameters": [
										{
											"list": [
												{
													"name": "path",
													"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
													"desc": "Path in the user's Dropbox to save the file."
												},
												{
													"name": "mode",
													"type": "WriteMode",
													"desc": "Selects what to do if the file already exists. The default for this union is add.",
													"parameters": [
														{
															"list": [
																{
																	"name": "add",
																	"type": "Void",
																	"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
																},
																{
																	"name": "overwrite",
																	"type": "Void",
																	"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
																},
																{
																	"name": "update",
																	"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
																	"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												},
												{
													"name": "autorename",
													"type": "Boolean",
													"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
												},
												{
													"name": "client_modified",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
													"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
												},
												{
													"name": "mute",
													"type": "Boolean",
													"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
												},
												{
													"name": "property_groups",
													"type": "List of (PropertyGroup)?",
													"desc": "List of custom properties to add to file. This field is optional.",
													"parameters": [
														{
															"list": [
																{
																	"name": "template_id",
																	"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
																	"desc": "A unique identifier for the associated template."
																},
																{
																	"name": "fields",
																	"type": "List of (PropertyField)",
																	"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
																	"parameters": [
																		{
																			"list": [
																				{
																					"name": "name",
																					"type": "String",
																					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																				},
																				{
																					"name": "value",
																					"type": "String",
																					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																				}
																			],
																			"example": null
																		}
																	]
																},
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														},
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												},
												{
													"name": "strict_conflict",
													"type": "Boolean",
													"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								},
								{
									"name": "property_groups",
									"type": "List of (PropertyGroup)?",
									"desc": "List of custom properties to add to file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "strict_conflict",
									"type": "Boolean",
									"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								},
								{
									"name": "property_groups",
									"type": "List of (PropertyGroup)?",
									"desc": "List of custom properties to add to file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "strict_conflict",
									"type": "Boolean",
									"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "cursor",
					"type": "UploadSessionCursor",
					"desc": "Contains the upload session ID and the offset.",
					"parameters": [
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "Offset in bytes at which data should be appended. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				},
				{
					"name": "commit",
					"type": "CommitInfo",
					"desc": "Contains the path and other optional modifiers for the commit.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								},
								{
									"name": "property_groups",
									"type": "List of (PropertyGroup)?",
									"desc": "List of custom properties to add to file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "template_id",
													"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
													"desc": "A unique identifier for the associated template."
												},
												{
													"name": "fields",
													"type": "List of (PropertyField)",
													"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
													"parameters": [
														{
															"list": [
																{
																	"name": "name",
																	"type": "String",
																	"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
																},
																{
																	"name": "value",
																	"type": "String",
																	"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "strict_conflict",
									"type": "Boolean",
									"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)?",
					"desc": "List of custom properties to add to file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "strict_conflict",
					"type": "Boolean",
					"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
				}
			],
			"example": {
				"entries": [
					{
						"cursor": {
							"session_id": "1234faaf0678bcde",
							"offset": 0
						},
						"commit": {
							"path": "/Homework/math/Matrices.txt",
							"mode": "add",
							"autorename": true,
							"mute": false,
							"strict_conflict": false
						}
					}
				]
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"is_downloadable": true,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
					"file_lock_info": {
						"is_lockholder": true,
						"lockholder_name": "Imaginary User",
						"created": "2015-05-12T15:50:38Z"
					}
				}
			]
		}
	},
	"files/upload_session/finish_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/upload_session/finish_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [upload_session/finish_batch](#filesupload_sessionfinish_batch-see-docs). If success, it returns list of result for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"is_downloadable": true,
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
					"file_lock_info": {
						"is_lockholder": true,
						"lockholder_name": "Imaginary User",
						"created": "2015-05-12T15:50:38Z"
					}
				}
			]
		}
	},
	"files/upload_session/start": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/start",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Upload sessions allow you to upload a single file in one or more requests, for example where the size of the file is greater than 150 MB.  This call starts a new upload session with the given data. You can then use [upload_session/append:2](#filesupload_sessionappend:2-see-docs) to add more data and [upload_session/finish](#filesupload_sessionfinish-see-docs) to save all the data to a file in Dropbox. A single request should not upload more than 150 MB. The maximum size of a file one can upload to an upload session is 350 GB. An upload session can be used for a maximum of 7 days. Attempting to use an UploadSessionStartResult.session_id with [upload_session/append:2](#filesupload_sessionappend:2-see-docs) or [upload_session/finish](#filesupload_sessionfinish-see-docs) more than 7 days after its creation will return a UploadSessionLookupError.not_found. Calls to this endpoint will count as data transport calls for any Dropbox Business teams with a limit on the number of data transport calls allowed per month. For more information, see the Data transport limit page. By default, upload sessions require you to send content of the file in sequential order via consecutive [upload_session/start](#filesupload_sessionstart-see-docs), [upload_session/append:2](#filesupload_sessionappend:2-see-docs), [upload_session/finish](#filesupload_sessionfinish-see-docs) calls. For better performance, you can instead optionally use a UploadSessionType.concurrent upload session. To start a new concurrent session, set UploadSessionStartArg.session_type to UploadSessionType.concurrent. After that, you can send file data in concurrent [upload_session/append:2](#filesupload_sessionappend:2-see-docs) requests. Finally finish the session with [upload_session/finish](#filesupload_sessionfinish-see-docs). There are couple of constraints with concurrent sessions to make them work. You can not send data with [upload_session/start](#filesupload_sessionstart-see-docs) or [upload_session/finish](#filesupload_sessionfinish-see-docs) call, only with [upload_session/append:2](#filesupload_sessionappend:2-see-docs) call. Also data uploaded in [upload_session/append:2](#filesupload_sessionappend:2-see-docs) call must be multiple of 4194304 bytes (except for last [upload_session/append:2](#filesupload_sessionappend:2-see-docs) with UploadSessionStartArg.close to true, that may contain any remaining data).",
		"parameters": {
			"list": [
				{
					"name": "close",
					"type": "Boolean",
					"desc": "If true, the current session will be closed, at which point you won't be able to call   anymore with the current session. The default for this field is False."
				},
				{
					"name": "session_type",
					"type": "UploadSessionType?",
					"desc": "Type of upload session you want to start. If not specified, default is UploadSessionType.sequential. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "sequential",
									"type": "Void",
									"desc": "Pieces of data are uploaded sequentially one after another. This is the default behavior."
								},
								{
									"name": "concurrent",
									"type": "Void",
									"desc": "Pieces of data can be uploaded in concurrent RPCs in any order."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "sequential",
					"type": "Void",
					"desc": "Pieces of data are uploaded sequentially one after another. This is the default behavior."
				},
				{
					"name": "concurrent",
					"type": "Void",
					"desc": "Pieces of data can be uploaded in concurrent RPCs in any order."
				}
			],
			"example": {
				"close": false
			}
		},
		"returnParameters": {
			"session_id": "1234faaf0678bcde"
		}
	},
	"sharing/add_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Adds specified members to a file.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File to which to add members."
				},
				{
					"name": "members",
					"type": "List of (MemberSelector)",
					"desc": "Members to add. Note that even an email address is given, this may result in a user being directly added to the membership if that email is the user's main account email.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				},
				{
					"name": "custom_message",
					"type": "String?",
					"desc": "Message to send to added members in their invitation. This field is optional."
				},
				{
					"name": "quiet",
					"type": "Boolean",
					"desc": "Whether added members should be notified via device notifications of their invitation. The default for this field is False."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "AccessLevel union object, describing what access level we want to give new members. The default for this union is viewer.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "add_message_as_comment",
					"type": "Boolean",
					"desc": "If the custom message should be added as a comment on the file. The default for this field is False."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"members": [
					{
						".tag": "email",
						"email": "justin@example.com"
					}
				],
				"custom_message": "This is a custom message about ACME.doc",
				"quiet": false,
				"access_level": "viewer",
				"add_message_as_comment": false
			}
		},
		"returnParameters": null
	},
	"sharing/add_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor (if the ACL update policy allows) of a shared folder to add another member. For the new member to get access to all the functionality for this folder, you will need to call [mount_folder](#sharingmount_folder-see-docs) on their behalf.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "members",
					"type": "List of (AddMember)",
					"desc": "The intended list of members to add.  Added members will receive invites to join the shared folder.",
					"parameters": [
						{
							"list": [
								{
									"name": "member",
									"type": "MemberSelector",
									"desc": "The member to add to the shared folder.",
									"parameters": [
										{
											"list": [
												{
													"name": "dropbox_id",
													"type": "String(min_length=1)",
													"desc": "Dropbox account, team member, or group ID of member."
												},
												{
													"name": "email",
													"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
													"desc": "Email address of member."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								},
								{
									"name": "access_level",
									"type": "AccessLevel",
									"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
									"parameters": [
										{
											"list": [
												{
													"name": "owner",
													"type": "Void",
													"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "The collaborator can both view and edit the shared folder."
												},
												{
													"name": "viewer",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder."
												},
												{
													"name": "viewer_no_comment",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder and does not have any access to comments."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member to add to the shared folder.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "quiet",
					"type": "Boolean",
					"desc": "Whether added members should be notified via email and device notifications of their invite. The default for this field is False."
				},
				{
					"name": "custom_message",
					"type": "String(min_length=1)?",
					"desc": "Optional message to display to added members in their invitation. This field is optional."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"members": [
					{
						"member": {
							".tag": "email",
							"email": "justin@example.com"
						},
						"access_level": "editor"
					},
					{
						"member": {
							".tag": "dropbox_id",
							"dropbox_id": "dbid:AAEufNrMPSPe0dMQijRP0N_aZtBJRm26W4Q"
						},
						"access_level": "viewer"
					}
				],
				"quiet": false,
				"custom_message": "Documentation for launch day"
			}
		},
		"returnParameters": null
	},
	"sharing/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "in_progress"
		}
	},
	"sharing/check_remove_member_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_remove_member_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for sharing a folder.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/check_share_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_share_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for sharing a folder.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": [],
			"access_inheritance": {
				".tag": "inherit"
			}
		}
	},
	"sharing/create_shared_link_with_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a shared link with custom settings. If no settings are given then the default visibility is RequestedVisibility.public (The resolved visibility, though, may depend on other aspects such as team and shared folder settings).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to be shared by the shared link."
				},
				{
					"name": "settings",
					"type": "SharedLinkSettings?",
					"desc": "The requested settings for the newly created shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "require_password",
									"type": "Boolean?",
									"desc": "Boolean flag to enable or disable password protection. This field is optional."
								},
								{
									"name": "link_password",
									"type": "String?",
									"desc": "If require_password is true, this is needed to specify the password to access the link. This field is optional."
								},
								{
									"name": "expires",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
								},
								{
									"name": "audience",
									"type": "LinkAudience?",
									"desc": "The new audience who can benefit from the access level specified by the link's access level specified in the `link_access_level` field of `LinkPermissions`. This is used in conjunction with team policies and shared folder policies to determine the final effective audience type in the `effective_audience` field of `LinkPermissions. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Link is accessible by anyone."
												},
												{
													"name": "team",
													"type": "Void",
													"desc": "Link is accessible only by team members."
												},
												{
													"name": "no_one",
													"type": "Void",
													"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
												},
												{
													"name": "members",
													"type": "Void",
													"desc": "Field is deprecated. Link is accessible only by members of the content."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								},
								{
									"name": "access",
									"type": "RequestedLinkAccessLevel?",
									"desc": "Requested access level you want the audience to gain from this link. Note, modifying access level for an existing link is not supported. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "viewer",
													"type": "Void",
													"desc": "Users who use the link can view and comment on the content."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
												},
												{
													"name": "max",
													"type": "Void",
													"desc": "Request for the maximum access level you can set the link to."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "Users who use the link can view and comment on the content."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
								},
								{
									"name": "max",
									"type": "Void",
									"desc": "Request for the maximum access level you can set the link to."
								},
								{
									"name": "requested_visibility",
									"type": "RequestedVisibility?",
									"desc": "Field is deprecated. Use audience instead.  The requested access for this shared link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Anyone who has received the link can access it. No login required."
												},
												{
													"name": "team_only",
													"type": "Void",
													"desc": "Only members of the same team can access the link. Login is required."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "A link-specific password is required to access the link. Login is not required."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "allow_download",
									"type": "Boolean?",
									"desc": "Boolean flag to allow or not download capabilities for shared links. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "viewer",
									"type": "Void",
									"desc": "Users who use the link can view and comment on the content."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
								},
								{
									"name": "max",
									"type": "Void",
									"desc": "Request for the maximum access level you can set the link to."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "require_password",
					"type": "Boolean?",
					"desc": "Boolean flag to enable or disable password protection. This field is optional."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If require_password is true, this is needed to specify the password to access the link. This field is optional."
				},
				{
					"name": "expires",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
				},
				{
					"name": "audience",
					"type": "LinkAudience?",
					"desc": "The new audience who can benefit from the access level specified by the link's access level specified in the `link_access_level` field of `LinkPermissions`. This is used in conjunction with team policies and shared folder policies to determine the final effective audience type in the `effective_audience` field of `LinkPermissions. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Link is accessible by anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Link is accessible only by team members."
				},
				{
					"name": "no_one",
					"type": "Void",
					"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Field is deprecated. Link is accessible only by members of the content."
				},
				{
					"name": "access",
					"type": "RequestedLinkAccessLevel?",
					"desc": "Requested access level you want the audience to gain from this link. Note, modifying access level for an existing link is not supported. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "viewer",
									"type": "Void",
									"desc": "Users who use the link can view and comment on the content."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
								},
								{
									"name": "max",
									"type": "Void",
									"desc": "Request for the maximum access level you can set the link to."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "Users who use the link can view and comment on the content."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
				},
				{
					"name": "max",
					"type": "Void",
					"desc": "Request for the maximum access level you can set the link to."
				},
				{
					"name": "requested_visibility",
					"type": "RequestedVisibility?",
					"desc": "Field is deprecated. Use audience instead.  The requested access for this shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Anyone who has received the link can access it. No login required."
				},
				{
					"name": "team_only",
					"type": "Void",
					"desc": "Only members of the same team can access the link. Login is required."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "allow_download",
					"type": "Boolean?",
					"desc": "Boolean flag to allow or not download capabilities for shared links. This field is optional."
				}
			],
			"example": {
				"path": "/Prime_Numbers.txt",
				"settings": {
					"audience": "public",
					"access": "viewer",
					"requested_visibility": "public",
					"allow_download": true
				}
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"visibility_policies": [
					{
						"policy": {
							".tag": "public"
						},
						"resolved_policy": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"policy": {
							".tag": "password"
						},
						"resolved_policy": {
							".tag": "password"
						},
						"allowed": true
					}
				],
				"can_set_expiry": false,
				"can_remove_expiry": false,
				"allow_download": true,
				"can_allow_download": true,
				"can_disallow_download": false,
				"allow_comments": true,
				"team_restricts_comments": true,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				},
				"audience_options": [
					{
						"audience": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"audience": {
							".tag": "team"
						},
						"allowed": false
					},
					{
						"audience": {
							".tag": "no_one"
						},
						"allowed": true
					}
				],
				"can_set_password": true,
				"can_remove_password": true,
				"require_password": false,
				"can_use_extended_sharing_controls": false
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_file_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_file_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared file metadata.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The file to query."
				},
				{
					"name": "actions",
					"type": "List of (FileAction)?",
					"desc": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's SharedFileMetadata.permissions field describing the actions the  authenticated user can perform on the file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information on the file."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the file."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the file."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Add a member with view permissions."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Add a member with view permissions but no comment permissions."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Add a member with edit permissions."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this file."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership to the file."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
								},
								{
									"name": "create_view_link",
									"type": "Void",
									"desc": "Create a shared link to a file that only allows users to view the content."
								},
								{
									"name": "create_edit_link",
									"type": "Void",
									"desc": "Create a shared link to a file that allows users to edit the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information on the file."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the file."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the file."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Add a member with view permissions."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Add a member with view permissions but no comment permissions."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Add a member with edit permissions."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this file."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership to the file."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
				},
				{
					"name": "create_view_link",
					"type": "Void",
					"desc": "Create a shared link to a file that only allows users to view the content."
				},
				{
					"name": "create_edit_link",
					"type": "Void",
					"desc": "Create a shared link to a file that allows users to edit the content."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"actions": []
			}
		},
		"returnParameters": {
			"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
			"name": "file.txt",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
			"access_type": {
				".tag": "viewer"
			},
			"owner_display_names": [
				"Jane Doe"
			],
			"owner_team": {
				"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
				"name": "Acme, Inc."
			},
			"path_display": "/dir/file.txt",
			"path_lower": "/dir/file.txt",
			"permissions": [],
			"time_invited": "2016-01-20T00:00:00Z"
		}
	},
	"sharing/get_file_metadata/batch": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_file_metadata/batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared file metadata.",
		"parameters": {
			"list": [
				{
					"name": "files",
					"type": "List of (String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\"), max_items=100)",
					"desc": "The files to query."
				},
				{
					"name": "actions",
					"type": "List of (FileAction)?",
					"desc": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's SharedFileMetadata.permissions field describing the actions the  authenticated user can perform on the file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information on the file."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the file."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the file."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Add a member with view permissions."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Add a member with view permissions but no comment permissions."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Add a member with edit permissions."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this file."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership to the file."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
								},
								{
									"name": "create_view_link",
									"type": "Void",
									"desc": "Create a shared link to a file that only allows users to view the content."
								},
								{
									"name": "create_edit_link",
									"type": "Void",
									"desc": "Create a shared link to a file that allows users to edit the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information on the file."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the file."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the file."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Add a member with view permissions."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Add a member with view permissions but no comment permissions."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Add a member with edit permissions."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this file."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership to the file."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
				},
				{
					"name": "create_view_link",
					"type": "Void",
					"desc": "Create a shared link to a file that only allows users to view the content."
				},
				{
					"name": "create_edit_link",
					"type": "Void",
					"desc": "Create a shared link to a file that allows users to edit the content."
				}
			],
			"example": {
				"files": [
					"id:3kmLmQFnf1AAAAAAAAAAAw",
					"id:VvTaJu2VZzAAAAAAAAAADQ"
				],
				"actions": []
			}
		},
		"returnParameters": null
	},
	"sharing/get_folder_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_folder_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared folder metadata by its folder ID.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								},
								{
									"name": "set_access_inheritance",
									"type": "Void",
									"desc": "Set whether the folder inherits permissions from its parent."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				},
				{
					"name": "set_access_inheritance",
					"type": "Void",
					"desc": "Set whether the folder inherits permissions from its parent."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"actions": []
			}
		},
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": [],
			"access_inheritance": {
				".tag": "inherit"
			}
		}
	},
	"sharing/get_shared_link_file": {
		"uri": "https://content.dropboxapi.com/2/sharing/get_shared_link_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Download the shared link's file from a user's Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link."
				},
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
					"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If the shared link has a password, this parameter can be used. This field is optional."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"path": "/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"visibility_policies": [
					{
						"policy": {
							".tag": "public"
						},
						"resolved_policy": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"policy": {
							".tag": "password"
						},
						"resolved_policy": {
							".tag": "password"
						},
						"allowed": true
					}
				],
				"can_set_expiry": false,
				"can_remove_expiry": false,
				"allow_download": true,
				"can_allow_download": true,
				"can_disallow_download": false,
				"allow_comments": true,
				"team_restricts_comments": true,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				},
				"audience_options": [
					{
						"audience": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"audience": {
							".tag": "team"
						},
						"allowed": false
					},
					{
						"audience": {
							".tag": "no_one"
						},
						"allowed": true
					}
				],
				"can_set_password": true,
				"can_remove_password": true,
				"require_password": false,
				"can_use_extended_sharing_controls": false
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_shared_link_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_link_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the shared link's metadata.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link."
				},
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
					"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If the shared link has a password, this parameter can be used. This field is optional."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"path": "/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"visibility_policies": [
					{
						"policy": {
							".tag": "public"
						},
						"resolved_policy": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"policy": {
							".tag": "password"
						},
						"resolved_policy": {
							".tag": "password"
						},
						"allowed": true
					}
				],
				"can_set_expiry": false,
				"can_remove_expiry": false,
				"allow_download": true,
				"can_allow_download": true,
				"can_disallow_download": false,
				"allow_comments": true,
				"team_restricts_comments": true,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				},
				"audience_options": [
					{
						"audience": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"audience": {
							".tag": "team"
						},
						"allowed": false
					},
					{
						"audience": {
							".tag": "no_one"
						},
						"allowed": true
					}
				],
				"can_set_password": true,
				"can_remove_password": true,
				"require_password": false,
				"can_use_extended_sharing_controls": false
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/list_file_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Use to obtain the members who have been invited to a file, both inherited and uninherited members.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The file for which you want to see members."
				},
				{
					"name": "actions",
					"type": "List of (MemberAction)?",
					"desc": "The actions for which to return permissions on a member. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Allow the member to keep a copy of the folder when removing."
								},
								{
									"name": "make_editor",
									"type": "Void",
									"desc": "Make the member an editor of the folder."
								},
								{
									"name": "make_owner",
									"type": "Void",
									"desc": "Make the member an owner of the folder."
								},
								{
									"name": "make_viewer",
									"type": "Void",
									"desc": "Make the member a viewer of the folder."
								},
								{
									"name": "make_viewer_no_comment",
									"type": "Void",
									"desc": "Make the member a viewer of the folder without commenting permissions."
								},
								{
									"name": "remove",
									"type": "Void",
									"desc": "Remove the member from the folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Allow the member to keep a copy of the folder when removing."
				},
				{
					"name": "make_editor",
					"type": "Void",
					"desc": "Make the member an editor of the folder."
				},
				{
					"name": "make_owner",
					"type": "Void",
					"desc": "Make the member an owner of the folder."
				},
				{
					"name": "make_viewer",
					"type": "Void",
					"desc": "Make the member a viewer of the folder."
				},
				{
					"name": "make_viewer_no_comment",
					"type": "Void",
					"desc": "Make the member a viewer of the folder without commenting permissions."
				},
				{
					"name": "remove",
					"type": "Void",
					"desc": "Remove the member from the folder."
				},
				{
					"name": "include_inherited",
					"type": "Boolean",
					"desc": "Whether to include members who only have access from a parent shared folder. The default for this field is True."
				},
				{
					"name": "limit",
					"type": "UInt32(min=1, max=300)",
					"desc": "Number of members to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"include_inherited": true,
				"limit": 100
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"email": "bob@example.com",
						"display_name": "Robert Smith",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false,
					"time_last_seen": "2016-01-20T00:00:00Z",
					"platform_type": {
						".tag": "unknown"
					}
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			]
		}
	},
	"sharing/list_file_members/batch": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members/batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get members of multiple files at once. The arguments to this route are more limited, and the limit on query result size per file is more strict. To customize the results more, use the individual file endpoint. Inherited users and groups are not included in the result, and permissions are not returned for this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "files",
					"type": "List of (String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\"), max_items=100)",
					"desc": "Files for which to return members."
				},
				{
					"name": "limit",
					"type": "UInt32(max=20)",
					"desc": "Number of members to return max per query. Defaults to 10 if no limit is specified. The default for this field is 10."
				}
			],
			"example": {
				"files": [
					"id:3kmLmQFnf1AAAAAAAAAAAw",
					"id:VvTaJu2VZzAAAAAAAAAADQ"
				],
				"limit": 10
			}
		},
		"returnParameters": null
	},
	"sharing/list_file_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_file_members](#sharinglist_file_members-see-docs) or [list_file_members/batch](#sharinglist_file_membersbatch-see-docs), use this to paginate through all shared file members.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by your last call to  ,  , or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"email": "bob@example.com",
						"display_name": "Robert Smith",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false,
					"time_last_seen": "2016-01-20T00:00:00Z",
					"platform_type": {
						".tag": "unknown"
					}
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			]
		}
	},
	"sharing/list_folder_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared folder membership by its folder ID.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "actions",
					"type": "List of (MemberAction)?",
					"desc": "This is a list indicating whether each returned member will include a boolean value MemberPermission.allow that describes whether the current user can perform the MemberAction on the member. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Allow the member to keep a copy of the folder when removing."
								},
								{
									"name": "make_editor",
									"type": "Void",
									"desc": "Make the member an editor of the folder."
								},
								{
									"name": "make_owner",
									"type": "Void",
									"desc": "Make the member an owner of the folder."
								},
								{
									"name": "make_viewer",
									"type": "Void",
									"desc": "Make the member a viewer of the folder."
								},
								{
									"name": "make_viewer_no_comment",
									"type": "Void",
									"desc": "Make the member a viewer of the folder without commenting permissions."
								},
								{
									"name": "remove",
									"type": "Void",
									"desc": "Remove the member from the folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Allow the member to keep a copy of the folder when removing."
				},
				{
					"name": "make_editor",
					"type": "Void",
					"desc": "Make the member an editor of the folder."
				},
				{
					"name": "make_owner",
					"type": "Void",
					"desc": "Make the member an owner of the folder."
				},
				{
					"name": "make_viewer",
					"type": "Void",
					"desc": "Make the member a viewer of the folder."
				},
				{
					"name": "make_viewer_no_comment",
					"type": "Void",
					"desc": "Make the member a viewer of the folder without commenting permissions."
				},
				{
					"name": "remove",
					"type": "Void",
					"desc": "Remove the member from the folder."
				},
				{
					"name": "limit",
					"type": "UInt32(min=1, max=1000)",
					"desc": "The maximum number of results that include members, groups and invitees to return per request. The default for this field is 1000."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"actions": [],
				"limit": 10
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"email": "bob@example.com",
						"display_name": "Robert Smith",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folder_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_folder_members](#sharinglist_folder_members-see-docs), use this to paginate through all shared folder members.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by your last call to   or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"email": "bob@example.com",
						"display_name": "Robert Smith",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the list of all shared folders the current user has access to.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt32(min=1, max=1000)",
					"desc": "The maximum number of results to return per request. The default for this field is 1000."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								},
								{
									"name": "set_access_inheritance",
									"type": "Void",
									"desc": "Set whether the folder inherits permissions from its parent."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				},
				{
					"name": "set_access_inheritance",
					"type": "Void",
					"desc": "Set whether the folder inherits permissions from its parent."
				}
			],
			"example": {
				"limit": 100,
				"actions": []
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": [],
					"access_inheritance": {
						".tag": "inherit"
					}
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_folders](#sharinglist_folders-see-docs), use this to paginate through all shared folders. The cursor must come from a previous call to [list_folders](#sharinglist_folders-see-docs) or [list_folders/continue](#sharinglist_folderscontinue-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by the previous API call specified in the endpoint description."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": [],
					"access_inheritance": {
						".tag": "inherit"
					}
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_mountable_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_mountable_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the list of all shared folders the current user can mount or unmount.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt32(min=1, max=1000)",
					"desc": "The maximum number of results to return per request. The default for this field is 1000."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								},
								{
									"name": "set_access_inheritance",
									"type": "Void",
									"desc": "Set whether the folder inherits permissions from its parent."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				},
				{
					"name": "set_access_inheritance",
					"type": "Void",
					"desc": "Set whether the folder inherits permissions from its parent."
				}
			],
			"example": {
				"limit": 100,
				"actions": []
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": [],
					"access_inheritance": {
						".tag": "inherit"
					}
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_mountable_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_mountable_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_mountable_folders](#sharinglist_mountable_folders-see-docs), use this to paginate through all mountable shared folders. The cursor must come from a previous call to [list_mountable_folders](#sharinglist_mountable_folders-see-docs) or [list_mountable_folders/continue](#sharinglist_mountable_folderscontinue-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by the previous API call specified in the endpoint description."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": [],
					"access_inheritance": {
						".tag": "inherit"
					}
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_received_files": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_received_files",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns a list of all files shared with current user.  Does not include files the user has received via shared folders, and does  not include unclaimed invitations.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt32(min=1, max=300)",
					"desc": "Number of files to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100."
				},
				{
					"name": "actions",
					"type": "List of (FileAction)?",
					"desc": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's SharedFileMetadata.permissions field describing the actions the  authenticated user can perform on the file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information on the file."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the file."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the file."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Add a member with view permissions."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Add a member with view permissions but no comment permissions."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Add a member with edit permissions."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this file."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership to the file."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
								},
								{
									"name": "create_view_link",
									"type": "Void",
									"desc": "Create a shared link to a file that only allows users to view the content."
								},
								{
									"name": "create_edit_link",
									"type": "Void",
									"desc": "Create a shared link to a file that allows users to edit the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information on the file."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the file."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the file."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Add a member with view permissions."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Add a member with view permissions but no comment permissions."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Add a member with edit permissions."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this file."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership to the file."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_view_link and create_edit_link instead."
				},
				{
					"name": "create_view_link",
					"type": "Void",
					"desc": "Create a shared link to a file that only allows users to view the content."
				},
				{
					"name": "create_edit_link",
					"type": "Void",
					"desc": "Create a shared link to a file that allows users to edit the content."
				}
			],
			"example": {
				"limit": 100,
				"actions": []
			}
		},
		"returnParameters": {
			"entries": [
				{
					"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
					"name": "file.txt",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
					"access_type": {
						".tag": "viewer"
					},
					"owner_display_names": [
						"Jane Doe"
					],
					"owner_team": {
						"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
						"name": "Acme, Inc."
					},
					"path_display": "/dir/file.txt",
					"path_lower": "/dir/file.txt",
					"permissions": [],
					"time_invited": "2016-01-20T00:00:00Z"
				}
			],
			"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9cmV2aXNpb24H3Qf6o1fkHxQ"
		}
	},
	"sharing/list_received_files/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_received_files/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get more results with a cursor from [list_received_files](#sharinglist_received_files-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "Cursor in ListFilesResult.cursor."
				}
			],
			"example": {
				"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9emfGRlc2MCRWxpbWl0BGRId"
			}
		},
		"returnParameters": {
			"entries": [
				{
					"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
					"name": "file.txt",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
					"access_type": {
						".tag": "viewer"
					},
					"owner_display_names": [
						"Jane Doe"
					],
					"owner_team": {
						"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
						"name": "Acme, Inc."
					},
					"path_display": "/dir/file.txt",
					"path_lower": "/dir/file.txt",
					"permissions": [],
					"time_invited": "2016-01-20T00:00:00Z"
				}
			],
			"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9cmV2aXNpb24H3Qf6o1fkHxQ"
		}
	},
	"sharing/list_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "List shared links of this user. If no path is given, returns a list of all shared links for the current user. For members of business teams using team space and member folders, returns all shared links in the team member's home folder unless the team space ID is specified in the request header. For more information, refer to the Namespace Guide. If a non-empty path is given, returns a list of all shared links that allow access to the given path - direct links to the given path and links to parent folders of the given path. Links to parent folders can be suppressed by setting direct_only to true.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")?",
					"desc": "See   description. This field is optional."
				},
				{
					"name": "cursor",
					"type": "String?",
					"desc": "The cursor returned by your last call to  . This field is optional."
				},
				{
					"name": "direct_only",
					"type": "Boolean?",
					"desc": "See   description. This field is optional."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"links": [
				{
					".tag": "file",
					"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
					"name": "Prime_Numbers.txt",
					"link_permissions": {
						"can_revoke": false,
						"visibility_policies": [
							{
								"policy": {
									".tag": "public"
								},
								"resolved_policy": {
									".tag": "public"
								},
								"allowed": true
							},
							{
								"policy": {
									".tag": "password"
								},
								"resolved_policy": {
									".tag": "password"
								},
								"allowed": true
							}
						],
						"can_set_expiry": false,
						"can_remove_expiry": false,
						"allow_download": true,
						"can_allow_download": true,
						"can_disallow_download": false,
						"allow_comments": true,
						"team_restricts_comments": true,
						"resolved_visibility": {
							".tag": "public"
						},
						"revoke_failure_reason": {
							".tag": "owner_only"
						},
						"audience_options": [
							{
								"audience": {
									".tag": "public"
								},
								"allowed": true
							},
							{
								"audience": {
									".tag": "team"
								},
								"allowed": false
							},
							{
								"audience": {
									".tag": "no_one"
								},
								"allowed": true
							}
						],
						"can_set_password": true,
						"can_remove_password": true,
						"require_password": false,
						"can_use_extended_sharing_controls": false
					},
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"path_lower": "/homework/math/prime_numbers.txt",
					"team_member_info": {
						"team_info": {
							"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
							"name": "Acme, Inc."
						},
						"display_name": "Roger Rabbit",
						"member_id": "dbmid:abcd1234"
					}
				}
			],
			"has_more": true,
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/modify_shared_link_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/modify_shared_link_settings",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Modify the shared link's settings. If the requested visibility conflict with the shared links policy of the team or the shared folder (in case the linked file is part of a shared folder) then the LinkPermissions.resolved_visibility of the returned SharedLinkMetadata will reflect the actual visibility of the shared link and the LinkPermissions.requested_visibility will reflect the requested visibility.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link to change its settings."
				},
				{
					"name": "settings",
					"type": "SharedLinkSettings",
					"desc": "Set of settings for the shared link.",
					"parameters": [
						{
							"list": [
								{
									"name": "require_password",
									"type": "Boolean?",
									"desc": "Boolean flag to enable or disable password protection. This field is optional."
								},
								{
									"name": "link_password",
									"type": "String?",
									"desc": "If require_password is true, this is needed to specify the password to access the link. This field is optional."
								},
								{
									"name": "expires",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
								},
								{
									"name": "audience",
									"type": "LinkAudience?",
									"desc": "The new audience who can benefit from the access level specified by the link's access level specified in the `link_access_level` field of `LinkPermissions`. This is used in conjunction with team policies and shared folder policies to determine the final effective audience type in the `effective_audience` field of `LinkPermissions. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Link is accessible by anyone."
												},
												{
													"name": "team",
													"type": "Void",
													"desc": "Link is accessible only by team members."
												},
												{
													"name": "no_one",
													"type": "Void",
													"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
												},
												{
													"name": "members",
													"type": "Void",
													"desc": "Field is deprecated. Link is accessible only by members of the content."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								},
								{
									"name": "access",
									"type": "RequestedLinkAccessLevel?",
									"desc": "Requested access level you want the audience to gain from this link. Note, modifying access level for an existing link is not supported. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "viewer",
													"type": "Void",
													"desc": "Users who use the link can view and comment on the content."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
												},
												{
													"name": "max",
													"type": "Void",
													"desc": "Request for the maximum access level you can set the link to."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "Users who use the link can view and comment on the content."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
								},
								{
									"name": "max",
									"type": "Void",
									"desc": "Request for the maximum access level you can set the link to."
								},
								{
									"name": "requested_visibility",
									"type": "RequestedVisibility?",
									"desc": "Field is deprecated. Use audience instead.  The requested access for this shared link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Anyone who has received the link can access it. No login required."
												},
												{
													"name": "team_only",
													"type": "Void",
													"desc": "Only members of the same team can access the link. Login is required."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "A link-specific password is required to access the link. Login is not required."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "allow_download",
									"type": "Boolean?",
									"desc": "Boolean flag to allow or not download capabilities for shared links. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "viewer",
									"type": "Void",
									"desc": "Users who use the link can view and comment on the content."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
								},
								{
									"name": "max",
									"type": "Void",
									"desc": "Request for the maximum access level you can set the link to."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "require_password",
					"type": "Boolean?",
					"desc": "Boolean flag to enable or disable password protection. This field is optional."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If require_password is true, this is needed to specify the password to access the link. This field is optional."
				},
				{
					"name": "expires",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
				},
				{
					"name": "audience",
					"type": "LinkAudience?",
					"desc": "The new audience who can benefit from the access level specified by the link's access level specified in the `link_access_level` field of `LinkPermissions`. This is used in conjunction with team policies and shared folder policies to determine the final effective audience type in the `effective_audience` field of `LinkPermissions. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Link is accessible by anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Link is accessible only by team members."
				},
				{
					"name": "no_one",
					"type": "Void",
					"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Field is deprecated. Link is accessible only by members of the content."
				},
				{
					"name": "access",
					"type": "RequestedLinkAccessLevel?",
					"desc": "Requested access level you want the audience to gain from this link. Note, modifying access level for an existing link is not supported. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "viewer",
									"type": "Void",
									"desc": "Users who use the link can view and comment on the content."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
								},
								{
									"name": "max",
									"type": "Void",
									"desc": "Request for the maximum access level you can set the link to."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "Users who use the link can view and comment on the content."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet."
				},
				{
					"name": "max",
					"type": "Void",
					"desc": "Request for the maximum access level you can set the link to."
				},
				{
					"name": "requested_visibility",
					"type": "RequestedVisibility?",
					"desc": "Field is deprecated. Use audience instead.  The requested access for this shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Anyone who has received the link can access it. No login required."
				},
				{
					"name": "team_only",
					"type": "Void",
					"desc": "Only members of the same team can access the link. Login is required."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "allow_download",
					"type": "Boolean?",
					"desc": "Boolean flag to allow or not download capabilities for shared links. This field is optional."
				},
				{
					"name": "remove_expiration",
					"type": "Boolean",
					"desc": "If set to true, removes the expiration of the shared link. The default for this field is False."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"settings": {
					"audience": "public",
					"access": "viewer",
					"requested_visibility": "public",
					"allow_download": true
				},
				"remove_expiration": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"visibility_policies": [
					{
						"policy": {
							".tag": "public"
						},
						"resolved_policy": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"policy": {
							".tag": "password"
						},
						"resolved_policy": {
							".tag": "password"
						},
						"allowed": true
					}
				],
				"can_set_expiry": false,
				"can_remove_expiry": false,
				"allow_download": true,
				"can_allow_download": true,
				"can_disallow_download": false,
				"allow_comments": true,
				"team_restricts_comments": true,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				},
				"audience_options": [
					{
						"audience": {
							".tag": "public"
						},
						"allowed": true
					},
					{
						"audience": {
							".tag": "team"
						},
						"allowed": false
					},
					{
						"audience": {
							".tag": "no_one"
						},
						"allowed": true
					}
				],
				"can_set_password": true,
				"can_remove_password": true,
				"require_password": false,
				"can_use_extended_sharing_controls": false
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/mount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/mount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user mounts the designated folder. Mount a shared folder for a user after they have been added as a member. Once mounted, the shared folder will appear in their Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID of the shared folder to mount."
				}
			],
			"example": {
				"shared_folder_id": "84528192421"
			}
		},
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": [],
			"access_inheritance": {
				".tag": "inherit"
			}
		}
	},
	"sharing/relinquish_file_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_file_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user relinquishes their membership in the designated file. Note that the current user may still have inherited access to this file through the parent folder.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The path or id for the file."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw"
			}
		},
		"returnParameters": null
	},
	"sharing/relinquish_folder_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_folder_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user relinquishes their membership in the designated shared folder and will no longer have access to the folder.  A folder owner cannot relinquish membership in their own folder. This will run synchronously if leave_a_copy is false, and asynchronously if leave_a_copy is true.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Boolean",
					"desc": "Keep a copy of the folder's contents upon relinquishing membership. This must be set to false when the folder is within a team folder or another shared folder. The default for this field is False."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"leave_a_copy": false
			}
		},
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/remove_file_member_2": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_file_member_2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Removes a specified member from the file.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File from which to remove members."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				}
			}
		},
		"returnParameters": null
	},
	"sharing/remove_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor (if the ACL update policy allows) of a shared folder to remove another member.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member to remove from the folder.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				},
				{
					"name": "leave_a_copy",
					"type": "Boolean",
					"desc": "If true, the removed user will keep their copy of the folder after it's unshared, assuming it was mounted. Otherwise, it will be removed from their Dropbox. This must be set to false when removing a group, or when the folder is within a team folder or another shared folder."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"leave_a_copy": false
			}
		},
		"returnParameters": {
			".tag": "async_job_id",
			"async_job_id": "34g93hh34h04y384084"
		}
	},
	"sharing/revoke_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/revoke_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Revoke a shared link. Note that even after revoking a shared link to a file, the file may be accessible if there are shared links leading to any of the file parent folders. To list all shared links that enable access to a specific file, you can use the [list_shared_links](#sharinglist_shared_links-see-docs) with the file as the ListSharedLinksArg.path argument.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0"
			}
		},
		"returnParameters": null
	},
	"sharing/set_access_inheritance": {
		"uri": "https://api.dropboxapi.com/2/sharing/set_access_inheritance",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Change the inheritance policy of an existing Shared Folder. Only permitted for shared folders in a shared team root. If a ShareFolderLaunch.async_job_id is returned, you'll need to call [check_share_job_status](#sharingcheck_share_job_status-see-docs) until the action completes to get the metadata for the folder.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "access_inheritance",
					"type": "AccessInheritance",
					"desc": "The access inheritance settings for the folder. The default for this union is inherit.",
					"parameters": [
						{
							"list": [
								{
									"name": "inherit",
									"type": "Void",
									"desc": "The shared folder inherits its members from the parent folder."
								},
								{
									"name": "no_inherit",
									"type": "Void",
									"desc": "The shared folder does not inherit its members from the parent folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "inherit",
					"type": "Void",
					"desc": "The shared folder inherits its members from the parent folder."
				},
				{
					"name": "no_inherit",
					"type": "Void",
					"desc": "The shared folder does not inherit its members from the parent folder."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"access_inheritance": "inherit"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": [],
			"access_inheritance": {
				".tag": "inherit"
			}
		}
	},
	"sharing/share_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/share_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Share a folder with collaborators. Most sharing will be completed synchronously. Large folders will be completed asynchronously. To make testing the async case repeatable, set `ShareFolderArg.force_async`. If a ShareFolderLaunch.async_job_id is returned, you'll need to call [check_share_job_status](#sharingcheck_share_job_status-see-docs) until the action completes to get the metadata for the folder.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the folder to share. If it does not exist, then a new one is created."
				},
				{
					"name": "acl_update_policy",
					"type": "AclUpdatePolicy?",
					"desc": "Who can add and remove members of this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "Only the owner can update the ACL."
								},
								{
									"name": "editors",
									"type": "Void",
									"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "Only the owner can update the ACL."
				},
				{
					"name": "editors",
					"type": "Void",
					"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
				},
				{
					"name": "force_async",
					"type": "Boolean",
					"desc": "Whether to force the share to happen asynchronously. The default for this field is False."
				},
				{
					"name": "member_policy",
					"type": "MemberPolicy?",
					"desc": "Who can be a member of this shared folder. Only applicable if the current user is on a team. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "team",
									"type": "Void",
									"desc": "Only a teammate can become a member."
								},
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Anyone can become a member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Only a teammate can become a member."
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Anyone can become a member."
				},
				{
					"name": "shared_link_policy",
					"type": "SharedLinkPolicy?",
					"desc": "The policy to apply to shared links created for content inside this shared folder.  The current user must be on a team to set this policy to SharedLinkPolicy.members. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Links can be shared with anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Field is deprecated. Links can be shared with anyone on the same team as the owner."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Links can only be shared among members of the shared folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Links can be shared with anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Field is deprecated. Links can be shared with anyone on the same team as the owner."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Links can only be shared among members of the shared folder."
				},
				{
					"name": "viewer_info_policy",
					"type": "ViewerInfoPolicy?",
					"desc": "Who can enable/disable viewer info for this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "enabled",
									"type": "Void",
									"desc": "Viewer information is available on this file."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Viewer information is disabled on this file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "enabled",
					"type": "Void",
					"desc": "Viewer information is available on this file."
				},
				{
					"name": "disabled",
					"type": "Void",
					"desc": "Viewer information is disabled on this file."
				},
				{
					"name": "access_inheritance",
					"type": "AccessInheritance",
					"desc": "The access inheritance settings for the folder. The default for this union is inherit.",
					"parameters": [
						{
							"list": [
								{
									"name": "inherit",
									"type": "Void",
									"desc": "The shared folder inherits its members from the parent folder."
								},
								{
									"name": "no_inherit",
									"type": "Void",
									"desc": "The shared folder does not inherit its members from the parent folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "inherit",
					"type": "Void",
					"desc": "The shared folder inherits its members from the parent folder."
				},
				{
					"name": "no_inherit",
					"type": "Void",
					"desc": "The shared folder does not inherit its members from the parent folder."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								},
								{
									"name": "set_access_inheritance",
									"type": "Void",
									"desc": "Set whether the folder inherits permissions from its parent."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				},
				{
					"name": "set_access_inheritance",
					"type": "Void",
					"desc": "Set whether the folder inherits permissions from its parent."
				},
				{
					"name": "link_settings",
					"type": "LinkSettings?",
					"desc": "Settings on the link for this folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "access_level",
									"type": "AccessLevel?",
									"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "owner",
													"type": "Void",
													"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "The collaborator can both view and edit the shared folder."
												},
												{
													"name": "viewer",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder."
												},
												{
													"name": "viewer_no_comment",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder and does not have any access to comments."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								},
								{
									"name": "audience",
									"type": "LinkAudience?",
									"desc": "The type of audience on the link for this file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Link is accessible by anyone."
												},
												{
													"name": "team",
													"type": "Void",
													"desc": "Link is accessible only by team members."
												},
												{
													"name": "no_one",
													"type": "Void",
													"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
												},
												{
													"name": "members",
													"type": "Void",
													"desc": "Field is deprecated. Link is accessible only by members of the content."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								},
								{
									"name": "expiry",
									"type": "LinkExpiry?",
									"desc": "An expiry timestamp to set on a link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_expiry",
													"type": "Void",
													"desc": "Remove the currently set expiry for the link."
												},
												{
													"name": "set_expiry",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
													"desc": "Set a new expiry or change an existing expiry."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								},
								{
									"name": "password",
									"type": "LinkPassword?",
									"desc": "The password for the link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_password",
													"type": "Void",
													"desc": "Remove the currently set password for the link."
												},
												{
													"name": "set_password",
													"type": "String",
													"desc": "Set a new password or change an existing password."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "access_level",
					"type": "AccessLevel?",
					"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "audience",
					"type": "LinkAudience?",
					"desc": "The type of audience on the link for this file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Link is accessible by anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Link is accessible only by team members."
				},
				{
					"name": "no_one",
					"type": "Void",
					"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Field is deprecated. Link is accessible only by members of the content."
				},
				{
					"name": "expiry",
					"type": "LinkExpiry?",
					"desc": "An expiry timestamp to set on a link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_expiry",
					"type": "Void",
					"desc": "Remove the currently set expiry for the link."
				},
				{
					"name": "set_expiry",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
					"desc": "Set a new expiry or change an existing expiry."
				},
				{
					"name": "password",
					"type": "LinkPassword?",
					"desc": "The password for the link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_password",
					"type": "Void",
					"desc": "Remove the currently set password for the link."
				},
				{
					"name": "set_password",
					"type": "String",
					"desc": "Set a new password or change an existing password."
				}
			],
			"example": {
				"path": "/example/workspace",
				"acl_update_policy": "editors",
				"force_async": false,
				"member_policy": "team",
				"shared_link_policy": "members",
				"access_inheritance": "inherit"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": [],
			"access_inheritance": {
				".tag": "inherit"
			}
		}
	},
	"sharing/transfer_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/transfer_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Transfer ownership of a shared folder to a member of the shared folder. User must have AccessLevel.owner access to the shared folder to perform a transfer.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "to_dropbox_id",
					"type": "String(min_length=1)",
					"desc": "A account or team member ID to transfer ownership to."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"to_dropbox_id": "dbid:AAEufNrMPSPe0dMQijRP0N_aZtBJRm26W4Q"
			}
		},
		"returnParameters": null
	},
	"sharing/unmount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unmount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user unmounts the designated folder. They can re-mount the folder at a later time using [mount_folder](#sharingmount_folder-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				}
			],
			"example": {
				"shared_folder_id": "84528192421"
			}
		},
		"returnParameters": null
	},
	"sharing/unshare_file": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Remove all members from this file. Does not remove inherited members.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The file to unshare."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw"
			}
		},
		"returnParameters": null
	},
	"sharing/unshare_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows a shared folder owner to unshare the folder. You'll need to call [check_job_status](#sharingcheck_job_status-see-docs) to determine if the action has completed successfully.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Boolean",
					"desc": "If true, members of this shared folder will get a copy of this folder after it's unshared. Otherwise, it will be removed from their Dropbox. The current user, who is an owner, will always retain their copy. The default for this field is False."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"leave_a_copy": false
			}
		},
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/update_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Changes a member's access on a shared file.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File for which we are changing a member's access."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member whose access we are changing.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The new access level for the member.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"access_level": "viewer"
			}
		},
		"returnParameters": null
	},
	"sharing/update_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor of a shared folder to update another member's permissions.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member of the shared folder to update.  Only the MemberSelector.dropbox_id may be set at this time.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The new access level for member. AccessLevel.owner is disallowed.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"access_level": "editor"
			}
		},
		"returnParameters": null
	},
	"sharing/update_folder_policy": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_policy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Update the sharing policies for a shared folder. User must have AccessLevel.owner access to the shared folder to update its policies.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "member_policy",
					"type": "MemberPolicy?",
					"desc": "Who can be a member of this shared folder. Only applicable if the current user is on a team. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "team",
									"type": "Void",
									"desc": "Only a teammate can become a member."
								},
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Anyone can become a member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Only a teammate can become a member."
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Anyone can become a member."
				},
				{
					"name": "acl_update_policy",
					"type": "AclUpdatePolicy?",
					"desc": "Who can add and remove members of this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "Only the owner can update the ACL."
								},
								{
									"name": "editors",
									"type": "Void",
									"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "Only the owner can update the ACL."
				},
				{
					"name": "editors",
					"type": "Void",
					"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
				},
				{
					"name": "viewer_info_policy",
					"type": "ViewerInfoPolicy?",
					"desc": "Who can enable/disable viewer info for this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "enabled",
									"type": "Void",
									"desc": "Viewer information is available on this file."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Viewer information is disabled on this file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "enabled",
					"type": "Void",
					"desc": "Viewer information is available on this file."
				},
				{
					"name": "disabled",
					"type": "Void",
					"desc": "Viewer information is disabled on this file."
				},
				{
					"name": "shared_link_policy",
					"type": "SharedLinkPolicy?",
					"desc": "The policy to apply to shared links created for content inside this shared folder. The current user must be on a team to set this policy to SharedLinkPolicy.members. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Links can be shared with anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Field is deprecated. Links can be shared with anyone on the same team as the owner."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Links can only be shared among members of the shared folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Links can be shared with anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Field is deprecated. Links can be shared with anyone on the same team as the owner."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Links can only be shared among members of the shared folder."
				},
				{
					"name": "link_settings",
					"type": "LinkSettings?",
					"desc": "Settings on the link for this folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "access_level",
									"type": "AccessLevel?",
									"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "owner",
													"type": "Void",
													"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "The collaborator can both view and edit the shared folder."
												},
												{
													"name": "viewer",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder."
												},
												{
													"name": "viewer_no_comment",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder and does not have any access to comments."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								},
								{
									"name": "audience",
									"type": "LinkAudience?",
									"desc": "The type of audience on the link for this file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Link is accessible by anyone."
												},
												{
													"name": "team",
													"type": "Void",
													"desc": "Link is accessible only by team members."
												},
												{
													"name": "no_one",
													"type": "Void",
													"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
												},
												{
													"name": "members",
													"type": "Void",
													"desc": "Field is deprecated. Link is accessible only by members of the content."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								},
								{
									"name": "expiry",
									"type": "LinkExpiry?",
									"desc": "An expiry timestamp to set on a link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_expiry",
													"type": "Void",
													"desc": "Remove the currently set expiry for the link."
												},
												{
													"name": "set_expiry",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
													"desc": "Set a new expiry or change an existing expiry."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								},
								{
									"name": "password",
									"type": "LinkPassword?",
									"desc": "The password for the link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_password",
													"type": "Void",
													"desc": "Remove the currently set password for the link."
												},
												{
													"name": "set_password",
													"type": "String",
													"desc": "Set a new password or change an existing password."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "access_level",
					"type": "AccessLevel?",
					"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "audience",
					"type": "LinkAudience?",
					"desc": "The type of audience on the link for this file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "no_one",
									"type": "Void",
									"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Field is deprecated. Link is accessible only by members of the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Link is accessible by anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Link is accessible only by team members."
				},
				{
					"name": "no_one",
					"type": "Void",
					"desc": "The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "Field is deprecated. Use `require_password` instead. A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Field is deprecated. Link is accessible only by members of the content."
				},
				{
					"name": "expiry",
					"type": "LinkExpiry?",
					"desc": "An expiry timestamp to set on a link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_expiry",
					"type": "Void",
					"desc": "Remove the currently set expiry for the link."
				},
				{
					"name": "set_expiry",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
					"desc": "Set a new expiry or change an existing expiry."
				},
				{
					"name": "password",
					"type": "LinkPassword?",
					"desc": "The password for the link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_password",
					"type": "Void",
					"desc": "Remove the currently set password for the link."
				},
				{
					"name": "set_password",
					"type": "String",
					"desc": "Set a new password or change an existing password."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "Field is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								},
								{
									"name": "set_access_inheritance",
									"type": "Void",
									"desc": "Set whether the folder inherits permissions from its parent."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "Field is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				},
				{
					"name": "set_access_inheritance",
					"type": "Void",
					"desc": "Set whether the folder inherits permissions from its parent."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"member_policy": "team",
				"acl_update_policy": "owner",
				"shared_link_policy": "members"
			}
		},
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": [],
			"access_inheritance": {
				".tag": "inherit"
			}
		}
	},
	"users/features/get_values": {
		"uri": "https://api.dropboxapi.com/2/users/features/get_values",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get a list of feature values that may be configured for the current account.",
		"parameters": {
			"list": [
				{
					"name": "features",
					"type": "List of (UserFeature)",
					"desc": "A list of features in UserFeature. If the list is empty, this route will return UserFeaturesGetValuesBatchError.",
					"parameters": [
						{
							"list": [
								{
									"name": "paper_as_files",
									"type": "Void",
									"desc": "This feature contains information about how the user's Paper files are stored."
								},
								{
									"name": "file_locking",
									"type": "Void",
									"desc": "This feature allows users to lock files in order to restrict other users from editing them."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "paper_as_files",
					"type": "Void",
					"desc": "This feature contains information about how the user's Paper files are stored."
				},
				{
					"name": "file_locking",
					"type": "Void",
					"desc": "This feature allows users to lock files in order to restrict other users from editing them."
				}
			],
			"example": {
				"features": [
					{
						".tag": "paper_as_files"
					},
					{
						".tag": "file_locking"
					}
				]
			}
		},
		"returnParameters": {
			"values": [
				{
					".tag": "paper_as_files",
					"paper_as_files": {
						".tag": "enabled",
						"enabled": true
					}
				}
			]
		}
	},
	"users/get_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get information about a user's account.",
		"parameters": {
			"list": [
				{
					"name": "account_id",
					"type": "String(min_length=40, max_length=40)",
					"desc": "A user's account identifier."
				}
			],
			"example": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			}
		},
		"returnParameters": {
			"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
			"name": {
				"given_name": "Franz",
				"surname": "Ferdinand",
				"familiar_name": "Franz",
				"display_name": "Franz Ferdinand (Personal)",
				"abbreviated_name": "FF"
			},
			"email": "franz@dropbox.com",
			"email_verified": true,
			"disabled": false,
			"is_teammate": false,
			"profile_photo_url": "https://dl-web.dropbox.com/account_photo/get/dbaphid%3AAAHWGmIXV3sUuOmBfTz0wPsiqHUpBWvv3ZA?vers=1556069330102&size=128x128"
		}
	},
	"users/get_account_batch": {
		"uri": "https://api.dropboxapi.com/2/users/get_account_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get information about multiple user accounts.  At most 300 accounts may be queried per request.",
		"parameters": {
			"list": [
				{
					"name": "account_ids",
					"type": "List of (String(min_length=40, max_length=40), min_items=1)",
					"desc": "List of user account identifiers.  Should not contain any duplicate account IDs."
				}
			],
			"example": {
				"account_ids": [
					"dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"dbid:AAH1Vcz-DVoRDeixtr_OA8oUGgiqhs4XPOQ"
				]
			}
		},
		"returnParameters": null
	},
	"users/get_current_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_current_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get information about the current user's account.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
			"name": {
				"given_name": "Franz",
				"surname": "Ferdinand",
				"familiar_name": "Franz",
				"display_name": "Franz Ferdinand (Personal)",
				"abbreviated_name": "FF"
			},
			"email": "franz@dropbox.com",
			"email_verified": true,
			"disabled": false,
			"locale": "en",
			"referral_link": "https://db.tt/ZITNuhtI",
			"is_paired": true,
			"account_type": {
				".tag": "business"
			},
			"root_info": {
				".tag": "user",
				"root_namespace_id": "3235641",
				"home_namespace_id": "3235641"
			},
			"country": "US",
			"team": {
				"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
				"name": "Acme, Inc.",
				"sharing_policies": {
					"shared_folder_member_policy": {
						".tag": "team"
					},
					"shared_folder_join_policy": {
						".tag": "from_anyone"
					},
					"shared_link_create_policy": {
						".tag": "team_only"
					}
				},
				"office_addin_policy": {
					".tag": "disabled"
				}
			},
			"team_member_id": "dbmid:AAHhy7WsR0x-u4ZCqiDl5Fz5zvuL3kmspwU"
		}
	},
	"users/get_space_usage": {
		"uri": "https://api.dropboxapi.com/2/users/get_space_usage",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the space usage information for the current user's account.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"used": 314159265,
			"allocation": {
				".tag": "individual",
				"allocated": 10000000000
			}
		}
	},
	"deprecated/alpha/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/alpha/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the metadata for a file or folder. This is an alpha endpoint compatible with the properties API. Note: Metadata for the root folder is unsupported.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of a file or folder on Dropbox."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true, DeletedMetadata will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				},
				{
					"name": "include_property_groups",
					"type": "TemplateFilterBase?",
					"desc": "If set to a valid list of template IDs, FileMetadata.property_groups is set if there exists property data associated with the file and each of the listed templates. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "filter_some",
									"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
									"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "filter_some",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"), min_items=1)",
					"desc": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."
				},
				{
					"name": "include_property_templates",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))?",
					"desc": "Field is deprecated. If set to a valid list of template IDs, FileMetadata.property_groups is set for files with custom properties. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math",
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"deprecated/alpha/upload": {
		"uri": "https://content.dropboxapi.com/2/files/alpha/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Create a new file with the contents provided in the request. Note that this endpoint is part of the properties API alpha and is slightly different from [upload](#filesupload-see-docs). Do not use this to upload a file larger than 150 MB. Instead, create an upload session with [upload_session/start](#filesupload_sessionstart-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)|(id:.*)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The supplied value should be the latest known \"rev\" of the file, for example, from FileMetadata, from when the file was last downloaded by the app. This will cause the file on the Dropbox servers to be overwritten if the given \"rev\" matches the existing file's current \"rev\" on the Dropbox servers. The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)?",
					"desc": "List of custom properties to add to file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "strict_conflict",
					"type": "Boolean",
					"desc": "Be more strict about how each WriteMode detects conflict. For example, always return a conflict error when mode = WriteMode.update and the given \"rev\" doesn't match the existing file's \"rev\", even if the existing file has been deleted. This also forces a conflict even when the target path refers to a file with identical contents. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math/Matrices.txt",
				"mode": "add",
				"autorename": true,
				"mute": false,
				"strict_conflict": false
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"is_downloadable": true,
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
			"file_lock_info": {
				"is_lockholder": true,
				"lockholder_name": "Imaginary User",
				"created": "2015-05-12T15:50:38Z"
			}
		}
	},
	"deprecated/properties/add": {
		"uri": "https://api.dropboxapi.com/2/files/properties/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "No description",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)",
					"desc": "The property groups which are to be added to a Dropbox file. No two groups in the input should  refer to the same template.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": null
	},
	"deprecated/properties/overwrite": {
		"uri": "https://api.dropboxapi.com/2/files/properties/overwrite",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "No description",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup, min_items=1)",
					"desc": "The property groups \"snapshot\" updates to force apply. No two groups in the input should  refer to the same template.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for the associated template."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for the associated template."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "The actual properties associated with the template. There can be up to 32 property types per template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": null
	},
	"deprecated/properties/remove": {
		"uri": "https://api.dropboxapi.com/2/files/properties/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "No description",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "property_template_ids",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))",
					"desc": "A list of identifiers for a template created by   or  ."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_template_ids": [
					"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
				]
			}
		},
		"returnParameters": null
	},
	"deprecated/properties/template/get": {
		"uri": "https://api.dropboxapi.com/2/files/properties/template/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "No description",
		"parameters": {
			"list": [
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "An identifier for template added by route  See   or  ."
				}
			],
			"example": {
				"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			}
		},
		"returnParameters": {
			"name": "Security",
			"description": "These properties describe how confidential this file or folder is.",
			"fields": [
				{
					"name": "Security Policy",
					"description": "This is the security policy of the file or folder described.\nPolicies can be Confidential, Public or Internal.",
					"type": {
						".tag": "string"
					}
				}
			]
		}
	},
	"deprecated/properties/template/list": {
		"uri": "https://api.dropboxapi.com/2/files/properties/template/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "No description",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"template_ids": [
				"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			]
		}
	},
	"deprecated/properties/update": {
		"uri": "https://api.dropboxapi.com/2/files/properties/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "No description",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file or folder."
				},
				{
					"name": "update_property_groups",
					"type": "List of (PropertyGroupUpdate)",
					"desc": "The property groups \"delta\" updates to apply.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for a property template."
								},
								{
									"name": "add_or_update_fields",
									"type": "List of (PropertyField)?",
									"desc": "Property fields to update. If the property field already exists, it is updated. If the property field doesn't exist, the property group is added. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								},
								{
									"name": "remove_fields",
									"type": "List of (String)?",
									"desc": "Property fields to remove (by name), provided they exist. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for a property template."
				},
				{
					"name": "add_or_update_fields",
					"type": "List of (PropertyField)?",
					"desc": "Property fields to update. If the property field already exists, it is updated. If the property field doesn't exist, the property group is added. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "Key of the property field associated with a file and template. Keys can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of the property field associated with a file and template. Values can be up to 1024 bytes."
				},
				{
					"name": "remove_fields",
					"type": "List of (String)?",
					"desc": "Property fields to remove (by name), provided they exist. This field is optional."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"update_property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"add_or_update_fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						],
						"remove_fields": []
					}
				]
			}
		},
		"returnParameters": null
	},
	"deprecated/docs/archive": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/archive",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Marks the given Paper doc as archived. This action can be performed or undone by anyone with edit permissions to the doc. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. This endpoint will be retired in September 2020. Refer to the Paper Migration Guide for more information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": null
	},
	"deprecated/docs/create": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/create",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Creates a new Paper doc with the provided content. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. This endpoint will be retired in September 2020. Refer to the Paper Migration Guide for more information.",
		"parameters": {
			"list": [
				{
					"name": "import_format",
					"type": "ImportFormat",
					"desc": "The format of provided data.",
					"parameters": [
						{
							"list": [
								{
									"name": "html",
									"type": "Void",
									"desc": "The provided data is interpreted as standard HTML."
								},
								{
									"name": "markdown",
									"type": "Void",
									"desc": "The provided data is interpreted as markdown. The first line of the provided document will be used as the doc title."
								},
								{
									"name": "plain_text",
									"type": "Void",
									"desc": "The provided data is interpreted as plain text. The first line of the provided document will be used as the doc title."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "html",
					"type": "Void",
					"desc": "The provided data is interpreted as standard HTML."
				},
				{
					"name": "markdown",
					"type": "Void",
					"desc": "The provided data is interpreted as markdown. The first line of the provided document will be used as the doc title."
				},
				{
					"name": "plain_text",
					"type": "Void",
					"desc": "The provided data is interpreted as plain text. The first line of the provided document will be used as the doc title."
				},
				{
					"name": "parent_folder_id",
					"type": "String?",
					"desc": "The Paper folder ID where the Paper document should be created. The API user has to have write access to this folder or error is thrown. This field is optional."
				}
			],
			"example": {
				"import_format": "markdown"
			}
		},
		"returnParameters": {
			"doc_id": "uaSvRuxvnkFa12PTkBv5q",
			"revision": 456736745,
			"title": "Week one retention"
		}
	},
	"deprecated/docs/download": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Exports and downloads Paper doc either as HTML or markdown. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "export_format",
					"type": "ExportFormat",
					"desc": "",
					"parameters": [
						{
							"list": [
								{
									"name": "html",
									"type": "Void",
									"desc": "The HTML export format."
								},
								{
									"name": "markdown",
									"type": "Void",
									"desc": "The markdown export format."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "html",
					"type": "Void",
					"desc": "The HTML export format."
				},
				{
					"name": "markdown",
					"type": "Void",
					"desc": "The markdown export format."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"export_format": "markdown"
			}
		},
		"returnParameters": {
			"owner": "james@example.com",
			"title": "Week one retention",
			"revision": 456736745,
			"mime_type": "text/x-markdown"
		}
	},
	"deprecated/docs/folder_users/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/folder_users/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Lists the users who are explicitly invited to the Paper folder in which the Paper doc is contained. For private folders all users (including owner) shared on the folder are listed and for team folders all non-team users shared on the folder are returned. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "limit",
					"type": "Int32(min=1, max=1000)",
					"desc": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"limit": 100
			}
		},
		"returnParameters": {
			"invitees": [
				{
					".tag": "email",
					"email": "jessica@example.com"
				}
			],
			"users": [
				{
					"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"email": "bob@example.com",
					"display_name": "Robert Smith",
					"same_team": true,
					"team_member_id": "dbmid:abcd1234"
				}
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"deprecated/docs/folder_users/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/folder_users/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [docs/folder_users/list](#paperdocsfolder_userslist-see-docs), use this to paginate through all users on the Paper folder. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor obtained from   or  . Allows for pagination."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"cursor": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd"
			}
		},
		"returnParameters": {
			"invitees": [
				{
					".tag": "email",
					"email": "jessica@example.com"
				}
			],
			"users": [
				{
					"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"email": "bob@example.com",
					"display_name": "Robert Smith",
					"same_team": true,
					"team_member_id": "dbmid:abcd1234"
				}
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"deprecated/docs/get_folder_info": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/get_folder_info",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Retrieves folder information for the given Paper doc. This includes:   - folder sharing policy; permissions for subfolders are set by the top-level folder.   - full 'filepath', i.e. the list of folders (both folderId and folderName) from     the root folder to the folder directly containing the Paper doc.  If the Paper doc is not in any folder (aka unfiled) the response will be empty. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": {
			"folder_sharing_policy_type": {
				".tag": "team"
			},
			"folders": [
				{
					"id": "e.gGYT6HSafpMej9bUv306oGm60vrHiCHgEFnzziioPGCvHf",
					"name": "Design docs"
				}
			]
		}
	},
	"deprecated/docs/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the list of all Paper docs according to the argument specifications. To iterate over through the full pagination, pass the cursor to [docs/list/continue](#paperdocslistcontinue-see-docs). Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "filter_by",
					"type": "ListPaperDocsFilterBy",
					"desc": "Allows user to specify how the Paper docs should be filtered. The default for this union is docs_accessed.",
					"parameters": [
						{
							"list": [
								{
									"name": "docs_accessed",
									"type": "Void",
									"desc": "Fetches all Paper doc IDs that the user has ever accessed."
								},
								{
									"name": "docs_created",
									"type": "Void",
									"desc": "Fetches only the Paper doc IDs that the user has created."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "docs_accessed",
					"type": "Void",
					"desc": "Fetches all Paper doc IDs that the user has ever accessed."
				},
				{
					"name": "docs_created",
					"type": "Void",
					"desc": "Fetches only the Paper doc IDs that the user has created."
				},
				{
					"name": "sort_by",
					"type": "ListPaperDocsSortBy",
					"desc": "Allows user to specify how the Paper docs should be sorted. The default for this union is accessed.",
					"parameters": [
						{
							"list": [
								{
									"name": "accessed",
									"type": "Void",
									"desc": "Sorts the Paper docs by the time they were last accessed."
								},
								{
									"name": "modified",
									"type": "Void",
									"desc": "Sorts the Paper docs by the time they were last modified."
								},
								{
									"name": "created",
									"type": "Void",
									"desc": "Sorts the Paper docs by the creation time."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "accessed",
					"type": "Void",
					"desc": "Sorts the Paper docs by the time they were last accessed."
				},
				{
					"name": "modified",
					"type": "Void",
					"desc": "Sorts the Paper docs by the time they were last modified."
				},
				{
					"name": "created",
					"type": "Void",
					"desc": "Sorts the Paper docs by the creation time."
				},
				{
					"name": "sort_order",
					"type": "ListPaperDocsSortOrder",
					"desc": "Allows user to specify the sort order of the result. The default for this union is ascending.",
					"parameters": [
						{
							"list": [
								{
									"name": "ascending",
									"type": "Void",
									"desc": "Sorts the search result in ascending order."
								},
								{
									"name": "descending",
									"type": "Void",
									"desc": "Sorts the search result in descending order."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "ascending",
					"type": "Void",
					"desc": "Sorts the search result in ascending order."
				},
				{
					"name": "descending",
					"type": "Void",
					"desc": "Sorts the search result in descending order."
				},
				{
					"name": "limit",
					"type": "Int32(min=1, max=1000)",
					"desc": "Size limit per batch. The maximum number of docs that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
				}
			],
			"example": {
				"filter_by": "docs_created",
				"sort_by": "modified",
				"sort_order": "descending",
				"limit": 100
			}
		},
		"returnParameters": {
			"doc_ids": [
				"zO1E7coc54sE8IuMdUoxz",
				"mm1AmDgVyZ10zf7qb0qzn",
				"dByYHZvTPBnXilGgyc5mm"
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": true
		}
	},
	"deprecated/docs/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [docs/list](#paperdocslist-see-docs), use this to paginate through all Paper doc. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor obtained from   or  . Allows for pagination."
				}
			],
			"example": {
				"cursor": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd"
			}
		},
		"returnParameters": {
			"doc_ids": [
				"zO1E7coc54sE8IuMdUoxz",
				"mm1AmDgVyZ10zf7qb0qzn",
				"dByYHZvTPBnXilGgyc5mm"
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": true
		}
	},
	"deprecated/docs/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Permanently deletes the given Paper doc. This operation is final as the doc cannot be recovered. This action can be performed only by the doc owner. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": null
	},
	"deprecated/docs/sharing_policy/get": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/sharing_policy/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Gets the default sharing policy for the given Paper doc. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": {
			"public_sharing_policy": {
				".tag": "people_with_link_can_edit"
			},
			"team_sharing_policy": {
				".tag": "people_with_link_can_edit"
			}
		}
	},
	"deprecated/docs/sharing_policy/set": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/sharing_policy/set",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Sets the default sharing policy for the given Paper doc. The default 'team_sharing_policy' can be changed only by teams, omit this field for personal accounts. The 'public_sharing_policy' policy can't be set to the value 'disabled' because this setting can be changed only via the team admin console. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "sharing_policy",
					"type": "SharingPolicy",
					"desc": "The default sharing policy to be set for the Paper doc.",
					"parameters": [
						{
							"list": [
								{
									"name": "public_sharing_policy",
									"type": "SharingPublicPolicyType?",
									"desc": "This value applies to the non-team members. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "people_with_link_can_edit",
													"type": "Void",
													"desc": "Users who have a link to this doc can edit it."
												},
												{
													"name": "people_with_link_can_view_and_comment",
													"type": "Void",
													"desc": "Users who have a link to this doc can view and comment on it."
												},
												{
													"name": "invite_only",
													"type": "Void",
													"desc": "Users must be explicitly invited to this doc."
												},
												{
													"name": "disabled",
													"type": "Void",
													"desc": "Value used to indicate that doc sharing is enabled only within team."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Value used to indicate that doc sharing is enabled only within team."
								},
								{
									"name": "team_sharing_policy",
									"type": "SharingTeamPolicyType?",
									"desc": "This value applies to the team members only. The value is null for all personal accounts. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "people_with_link_can_edit",
													"type": "Void",
													"desc": "Users who have a link to this doc can edit it."
												},
												{
													"name": "people_with_link_can_view_and_comment",
													"type": "Void",
													"desc": "Users who have a link to this doc can view and comment on it."
												},
												{
													"name": "invite_only",
													"type": "Void",
													"desc": "Users must be explicitly invited to this doc."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Value used to indicate that doc sharing is enabled only within team."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public_sharing_policy",
					"type": "SharingPublicPolicyType?",
					"desc": "This value applies to the non-team members. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Value used to indicate that doc sharing is enabled only within team."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "people_with_link_can_edit",
					"type": "Void",
					"desc": "Users who have a link to this doc can edit it."
				},
				{
					"name": "people_with_link_can_view_and_comment",
					"type": "Void",
					"desc": "Users who have a link to this doc can view and comment on it."
				},
				{
					"name": "invite_only",
					"type": "Void",
					"desc": "Users must be explicitly invited to this doc."
				},
				{
					"name": "disabled",
					"type": "Void",
					"desc": "Value used to indicate that doc sharing is enabled only within team."
				},
				{
					"name": "team_sharing_policy",
					"type": "SharingTeamPolicyType?",
					"desc": "This value applies to the team members only. The value is null for all personal accounts. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "people_with_link_can_edit",
					"type": "Void",
					"desc": "Users who have a link to this doc can edit it."
				},
				{
					"name": "people_with_link_can_view_and_comment",
					"type": "Void",
					"desc": "Users who have a link to this doc can view and comment on it."
				},
				{
					"name": "invite_only",
					"type": "Void",
					"desc": "Users must be explicitly invited to this doc."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"sharing_policy": {
					"public_sharing_policy": "people_with_link_can_edit",
					"team_sharing_policy": "people_with_link_can_edit"
				}
			}
		},
		"returnParameters": null
	},
	"deprecated/docs/update": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Updates an existing Paper doc with the provided content. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. This endpoint will be retired in September 2020. Refer to the Paper Migration Guide for more information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "doc_update_policy",
					"type": "PaperDocUpdatePolicy",
					"desc": "The policy used for the current update call.",
					"parameters": [
						{
							"list": [
								{
									"name": "append",
									"type": "Void",
									"desc": "The content will be appended to the doc."
								},
								{
									"name": "prepend",
									"type": "Void",
									"desc": "The content will be prepended to the doc. The doc title will not be affected."
								},
								{
									"name": "overwrite_all",
									"type": "Void",
									"desc": "The document will be overwitten at the head with the provided content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "append",
					"type": "Void",
					"desc": "The content will be appended to the doc."
				},
				{
					"name": "prepend",
					"type": "Void",
					"desc": "The content will be prepended to the doc. The doc title will not be affected."
				},
				{
					"name": "overwrite_all",
					"type": "Void",
					"desc": "The document will be overwitten at the head with the provided content."
				},
				{
					"name": "revision",
					"type": "Int64",
					"desc": "The latest doc revision. This value must match the head revision or an error code will be returned. This is to prevent colliding writes."
				},
				{
					"name": "import_format",
					"type": "ImportFormat",
					"desc": "The format of provided data.",
					"parameters": [
						{
							"list": [
								{
									"name": "html",
									"type": "Void",
									"desc": "The provided data is interpreted as standard HTML."
								},
								{
									"name": "markdown",
									"type": "Void",
									"desc": "The provided data is interpreted as markdown. The first line of the provided document will be used as the doc title."
								},
								{
									"name": "plain_text",
									"type": "Void",
									"desc": "The provided data is interpreted as plain text. The first line of the provided document will be used as the doc title."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "html",
					"type": "Void",
					"desc": "The provided data is interpreted as standard HTML."
				},
				{
					"name": "markdown",
					"type": "Void",
					"desc": "The provided data is interpreted as markdown. The first line of the provided document will be used as the doc title."
				},
				{
					"name": "plain_text",
					"type": "Void",
					"desc": "The provided data is interpreted as plain text. The first line of the provided document will be used as the doc title."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"doc_update_policy": "overwrite_all",
				"revision": 12345,
				"import_format": "html"
			}
		},
		"returnParameters": {
			"doc_id": "uaSvRuxvnkFa12PTkBv5q",
			"revision": 456736745,
			"title": "Week one retention"
		}
	},
	"deprecated/docs/users/add": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor to add users to a Paper doc or change their permissions using their email address or Dropbox account ID. The doc owner's permissions cannot be changed. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "members",
					"type": "List of (AddMember, max_items=20)",
					"desc": "User which should be added to the Paper doc. Specify only email address or Dropbox account ID.",
					"parameters": [
						{
							"list": [
								{
									"name": "member",
									"type": "MemberSelector",
									"desc": "User which should be added to the Paper doc. Specify only email address or Dropbox account ID.",
									"parameters": [
										{
											"list": [
												{
													"name": "dropbox_id",
													"type": "String(min_length=1)",
													"desc": "Dropbox account, team member, or group ID of member."
												},
												{
													"name": "email",
													"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
													"desc": "Email address of member."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								},
								{
									"name": "permission_level",
									"type": "PaperDocPermissionLevel",
									"desc": "Permission for the user. The default for this union is edit.",
									"parameters": [
										{
											"list": [
												{
													"name": "edit",
													"type": "Void",
													"desc": "User will be granted edit permissions."
												},
												{
													"name": "view_and_comment",
													"type": "Void",
													"desc": "User will be granted view and comment permissions."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "edit",
									"type": "Void",
									"desc": "User will be granted edit permissions."
								},
								{
									"name": "view_and_comment",
									"type": "Void",
									"desc": "User will be granted view and comment permissions."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "edit",
									"type": "Void",
									"desc": "User will be granted edit permissions."
								},
								{
									"name": "view_and_comment",
									"type": "Void",
									"desc": "User will be granted view and comment permissions."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "User which should be added to the Paper doc. Specify only email address or Dropbox account ID.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				},
				{
					"name": "permission_level",
					"type": "PaperDocPermissionLevel",
					"desc": "Permission for the user. The default for this union is edit.",
					"parameters": [
						{
							"list": [
								{
									"name": "edit",
									"type": "Void",
									"desc": "User will be granted edit permissions."
								},
								{
									"name": "view_and_comment",
									"type": "Void",
									"desc": "User will be granted view and comment permissions."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "edit",
					"type": "Void",
					"desc": "User will be granted edit permissions."
				},
				{
					"name": "view_and_comment",
					"type": "Void",
					"desc": "User will be granted view and comment permissions."
				},
				{
					"name": "custom_message",
					"type": "String?",
					"desc": "A personal message that will be emailed to each successfully added member. This field is optional."
				},
				{
					"name": "quiet",
					"type": "Boolean",
					"desc": "Clients should set this to true if no email message shall be sent to added users. The default for this field is False."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"members": [
					{
						"member": {
							".tag": "email",
							"email": "justin@example.com"
						},
						"permission_level": "view_and_comment"
					}
				],
				"custom_message": "Welcome to Paper.",
				"quiet": false
			}
		},
		"returnParameters": null
	},
	"deprecated/docs/users/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Lists all users who visited the Paper doc or users with explicit access. This call excludes users who have been removed. The list is sorted by the date of the visit or the share date. The list will include both users, the explicitly shared ones as well as those who came in using the Paper url link. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "limit",
					"type": "Int32(min=1, max=1000)",
					"desc": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
				},
				{
					"name": "filter_by",
					"type": "UserOnPaperDocFilter",
					"desc": "Specify this attribute if you want to obtain users that have already accessed the Paper doc. The default for this union is shared.",
					"parameters": [
						{
							"list": [
								{
									"name": "visited",
									"type": "Void",
									"desc": "all users who have visited the Paper doc."
								},
								{
									"name": "shared",
									"type": "Void",
									"desc": "All uses who are shared on the Paper doc. This includes all users who have visited the Paper doc as well as those who have not."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "visited",
					"type": "Void",
					"desc": "all users who have visited the Paper doc."
				},
				{
					"name": "shared",
					"type": "Void",
					"desc": "All uses who are shared on the Paper doc. This includes all users who have visited the Paper doc as well as those who have not."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"limit": 100,
				"filter_by": "shared"
			}
		},
		"returnParameters": {
			"invitees": [
				{
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permission_level": {
						".tag": "edit"
					}
				}
			],
			"users": [
				{
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"email": "bob@example.com",
						"display_name": "Robert Smith",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permission_level": {
						".tag": "view_and_comment"
					}
				}
			],
			"doc_owner": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"email": "bob@example.com",
				"display_name": "Robert Smith",
				"same_team": true,
				"team_member_id": "dbmid:abcd1234"
			},
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"deprecated/docs/users/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [docs/users/list](#paperdocsuserslist-see-docs), use this to paginate through all users on the Paper doc. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor obtained from   or  . Allows for pagination."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"cursor": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd"
			}
		},
		"returnParameters": {
			"invitees": [
				{
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permission_level": {
						".tag": "edit"
					}
				}
			],
			"users": [
				{
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"email": "bob@example.com",
						"display_name": "Robert Smith",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permission_level": {
						".tag": "view_and_comment"
					}
				}
			],
			"doc_owner": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"email": "bob@example.com",
				"display_name": "Robert Smith",
				"same_team": true,
				"team_member_id": "dbmid:abcd1234"
			},
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"deprecated/docs/users/remove": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor to remove users from a Paper doc using their email address or Dropbox account ID. The doc owner cannot be removed. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "User which should be removed from the Paper doc. Specify only email address or Dropbox account ID.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				}
			}
		},
		"returnParameters": null
	},
	"deprecated/folders/create": {
		"uri": "https://api.dropboxapi.com/2/paper/folders/create",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a new Paper folder with the provided info. Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper. Refer to the Paper Migration Guide for migration information.",
		"parameters": {
			"list": [
				{
					"name": "name",
					"type": "String",
					"desc": "The name of the new Paper folder."
				},
				{
					"name": "parent_folder_id",
					"type": "String?",
					"desc": "The encrypted Paper folder Id where the new Paper folder should be created. The API user has to have write access to this folder or error is thrown. If not supplied, the new folder will be created at top level. This field is optional."
				},
				{
					"name": "is_team_folder",
					"type": "Boolean?",
					"desc": "Whether the folder to be created should be a team folder. This value will be ignored if parent_folder_id is supplied, as the new folder will inherit the type (private or team folder) from its parent. We will by default create a top-level private folder if both parent_folder_id and is_team_folder are not supplied. This field is optional."
				}
			],
			"example": {
				"name": "my new folder"
			}
		},
		"returnParameters": {
			"folder_id": "abcd"
		}
	},
	"deprecated/create_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a shared link. If a shared link already exists for the given path, that link is returned. Previously, it was technically possible to break a shared link by moving or renaming the corresponding file or folder. In the future, this will no longer be the case, so your app shouldn't rely on this behavior. Instead, if your app needs to revoke a shared link, use [revoke_shared_link](#sharingrevoke_shared_link-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String",
					"desc": "The path to share."
				},
				{
					"name": "short_url",
					"type": "Boolean",
					"desc": "Field is deprecated. None The default for this field is False."
				},
				{
					"name": "pending_upload",
					"type": "PendingUploadMode?",
					"desc": "If it's okay to share a path that does not yet exist, set this to either PendingUploadMode.file or PendingUploadMode.folder to indicate whether to assume it's a file or folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "file",
									"type": "Void",
									"desc": "Assume pending uploads are files."
								},
								{
									"name": "folder",
									"type": "Void",
									"desc": "Assume pending uploads are folders."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "file",
					"type": "Void",
					"desc": "Assume pending uploads are files."
				},
				{
					"name": "folder",
					"type": "Void",
					"desc": "Assume pending uploads are folders."
				}
			],
			"example": {
				"path": "/Homework/Math/Prime_Numbers.txt",
				"short_url": false
			}
		},
		"returnParameters": {
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"visibility": {
				".tag": "public"
			},
			"path": "/Homework/Math/Prime_Numbers.txt"
		}
	},
	"deprecated/get_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns a list of LinkMetadata objects for this user, including collection links. If no path is given, returns a list of all shared links for the current user, including collection links, up to a maximum of 1000 links. If a non-empty path is given, returns a list of all shared links that allow access to the given path.  Collection links are never returned in this case.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String?",
					"desc": "See   description. This field is optional."
				}
			],
			"example": {
				"path": ""
			}
		},
		"returnParameters": {
			"links": [
				{
					".tag": "path",
					"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
					"visibility": {
						".tag": "public"
					},
					"path": "/Homework/Math/Prime_Numbers.txt"
				}
			]
		}
	},
	"deprecated/remove_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Identical to remove_file_member_2 but with less information returned.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File from which to remove members."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
									"desc": "Email address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\\.[A-Za-z]{2,15}$\")",
					"desc": "Email address of member."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				}
			}
		},
		"returnParameters": {
			".tag": "success"
		}
	}
}